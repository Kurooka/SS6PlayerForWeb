/**
 * -----------------------------------------------------------
 * ssfblib v1.0.0
 *
 * Copyright(C) Web Technology Corp.
 * https://www.webtech.co.jp/
 * -----------------------------------------------------------
 */

(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = global || self, factory(global.ssfblib = {}));
}(this, function (exports) { 'use strict';

  // automatically generated by the FlatBuffers compiler, do not modify
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var SsPartType;
          (function (SsPartType) {
              SsPartType[SsPartType["Invalid"] = -1] = "Invalid";
              SsPartType[SsPartType["Nulltype"] = 0] = "Nulltype";
              SsPartType[SsPartType["Normal"] = 1] = "Normal";
              SsPartType[SsPartType["Text"] = 2] = "Text";
              SsPartType[SsPartType["Instance"] = 3] = "Instance";
              SsPartType[SsPartType["Armature"] = 4] = "Armature";
              SsPartType[SsPartType["Effect"] = 5] = "Effect";
              SsPartType[SsPartType["Mesh"] = 6] = "Mesh";
              SsPartType[SsPartType["Movenode"] = 7] = "Movenode";
              SsPartType[SsPartType["Constraint"] = 8] = "Constraint";
              SsPartType[SsPartType["Mask"] = 9] = "Mask";
              SsPartType[SsPartType["Joint"] = 10] = "Joint";
              SsPartType[SsPartType["Bonepoint"] = 11] = "Bonepoint";
          })(SsPartType = ssfb.SsPartType || (ssfb.SsPartType = {}));
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @enum {number}
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var PART_FLAG;
          (function (PART_FLAG) {
              PART_FLAG[PART_FLAG["INVISIBLE"] = 1] = "INVISIBLE";
              PART_FLAG[PART_FLAG["FLIP_H"] = 2] = "FLIP_H";
              PART_FLAG[PART_FLAG["FLIP_V"] = 4] = "FLIP_V";
              PART_FLAG[PART_FLAG["CELL_INDEX"] = 8] = "CELL_INDEX";
              PART_FLAG[PART_FLAG["POSITION_X"] = 16] = "POSITION_X";
              PART_FLAG[PART_FLAG["POSITION_Y"] = 32] = "POSITION_Y";
              PART_FLAG[PART_FLAG["POSITION_Z"] = 64] = "POSITION_Z";
              PART_FLAG[PART_FLAG["PIVOT_X"] = 128] = "PIVOT_X";
              PART_FLAG[PART_FLAG["PIVOT_Y"] = 256] = "PIVOT_Y";
              PART_FLAG[PART_FLAG["ROTATIONX"] = 512] = "ROTATIONX";
              PART_FLAG[PART_FLAG["ROTATIONY"] = 1024] = "ROTATIONY";
              PART_FLAG[PART_FLAG["ROTATIONZ"] = 2048] = "ROTATIONZ";
              PART_FLAG[PART_FLAG["SCALE_X"] = 4096] = "SCALE_X";
              PART_FLAG[PART_FLAG["SCALE_Y"] = 8192] = "SCALE_Y";
              PART_FLAG[PART_FLAG["LOCALSCALE_X"] = 16384] = "LOCALSCALE_X";
              PART_FLAG[PART_FLAG["LOCALSCALE_Y"] = 32768] = "LOCALSCALE_Y";
              PART_FLAG[PART_FLAG["OPACITY"] = 65536] = "OPACITY";
              PART_FLAG[PART_FLAG["LOCALOPACITY"] = 131072] = "LOCALOPACITY";
              PART_FLAG[PART_FLAG["PARTS_COLOR"] = 262144] = "PARTS_COLOR";
              PART_FLAG[PART_FLAG["VERTEX_TRANSFORM"] = 524288] = "VERTEX_TRANSFORM";
              PART_FLAG[PART_FLAG["SIZE_X"] = 1048576] = "SIZE_X";
              PART_FLAG[PART_FLAG["SIZE_Y"] = 2097152] = "SIZE_Y";
              PART_FLAG[PART_FLAG["U_MOVE"] = 4194304] = "U_MOVE";
              PART_FLAG[PART_FLAG["V_MOVE"] = 8388608] = "V_MOVE";
              PART_FLAG[PART_FLAG["UV_ROTATION"] = 16777216] = "UV_ROTATION";
              PART_FLAG[PART_FLAG["U_SCALE"] = 33554432] = "U_SCALE";
              PART_FLAG[PART_FLAG["V_SCALE"] = 67108864] = "V_SCALE";
              PART_FLAG[PART_FLAG["BOUNDINGRADIUS"] = 134217728] = "BOUNDINGRADIUS";
              PART_FLAG[PART_FLAG["MASK"] = 268435456] = "MASK";
              PART_FLAG[PART_FLAG["PRIORITY"] = 536870912] = "PRIORITY";
              PART_FLAG[PART_FLAG["INSTANCE_KEYFRAME"] = 1073741824] = "INSTANCE_KEYFRAME";
              PART_FLAG[PART_FLAG["EFFECT_KEYFRAME"] = 2147483648] = "EFFECT_KEYFRAME";
          })(PART_FLAG = ssfb.PART_FLAG || (ssfb.PART_FLAG = {}));
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @enum {number}
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var PART_FLAG2;
          (function (PART_FLAG2) {
              PART_FLAG2[PART_FLAG2["MESHDATA"] = 1] = "MESHDATA";
          })(PART_FLAG2 = ssfb.PART_FLAG2 || (ssfb.PART_FLAG2 = {}));
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @enum {number}
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var VERTEX_FLAG;
          (function (VERTEX_FLAG) {
              VERTEX_FLAG[VERTEX_FLAG["LT"] = 1] = "LT";
              VERTEX_FLAG[VERTEX_FLAG["RT"] = 2] = "RT";
              VERTEX_FLAG[VERTEX_FLAG["LB"] = 4] = "LB";
              VERTEX_FLAG[VERTEX_FLAG["RB"] = 8] = "RB";
              VERTEX_FLAG[VERTEX_FLAG["ONE"] = 16] = "ONE";
          })(VERTEX_FLAG = ssfb.VERTEX_FLAG || (ssfb.VERTEX_FLAG = {}));
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @enum {number}
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectNodeBehavior;
          (function (EffectNodeBehavior) {
              EffectNodeBehavior[EffectNodeBehavior["NONE"] = 0] = "NONE";
              EffectNodeBehavior[EffectNodeBehavior["EffectParticleElementBasic"] = 1] = "EffectParticleElementBasic";
              EffectNodeBehavior[EffectNodeBehavior["EffectParticleElementRndSeedChange"] = 2] = "EffectParticleElementRndSeedChange";
              EffectNodeBehavior[EffectNodeBehavior["EffectParticleElementDelay"] = 3] = "EffectParticleElementDelay";
              EffectNodeBehavior[EffectNodeBehavior["EffectParticleElementGravity"] = 4] = "EffectParticleElementGravity";
              EffectNodeBehavior[EffectNodeBehavior["EffectParticleElementPosition"] = 5] = "EffectParticleElementPosition";
              EffectNodeBehavior[EffectNodeBehavior["EffectParticleElementRotation"] = 6] = "EffectParticleElementRotation";
              EffectNodeBehavior[EffectNodeBehavior["EffectParticleElementRotationTrans"] = 7] = "EffectParticleElementRotationTrans";
              EffectNodeBehavior[EffectNodeBehavior["EffectParticleElementTransSpeed"] = 8] = "EffectParticleElementTransSpeed";
              EffectNodeBehavior[EffectNodeBehavior["EffectParticleElementTangentialAcceleration"] = 9] = "EffectParticleElementTangentialAcceleration";
              EffectNodeBehavior[EffectNodeBehavior["EffectParticleElementInitColor"] = 10] = "EffectParticleElementInitColor";
              EffectNodeBehavior[EffectNodeBehavior["EffectParticleElementTransColor"] = 11] = "EffectParticleElementTransColor";
              EffectNodeBehavior[EffectNodeBehavior["EffectParticleElementAlphaFade"] = 12] = "EffectParticleElementAlphaFade";
              EffectNodeBehavior[EffectNodeBehavior["EffectParticleElementSize"] = 13] = "EffectParticleElementSize";
              EffectNodeBehavior[EffectNodeBehavior["EffectParticleElementTransSize"] = 14] = "EffectParticleElementTransSize";
              EffectNodeBehavior[EffectNodeBehavior["EffectParticlePointGravity"] = 15] = "EffectParticlePointGravity";
              EffectNodeBehavior[EffectNodeBehavior["EffectParticleTurnToDirectionEnabled"] = 16] = "EffectParticleTurnToDirectionEnabled";
              EffectNodeBehavior[EffectNodeBehavior["EffectParticleInfiniteEmitEnabled"] = 17] = "EffectParticleInfiniteEmitEnabled";
          })(EffectNodeBehavior = ssfb.EffectNodeBehavior || (ssfb.EffectNodeBehavior = {}));
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @enum {number}
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var userDataValue;
          (function (userDataValue) {
              userDataValue[userDataValue["NONE"] = 0] = "NONE";
              userDataValue[userDataValue["userDataInteger"] = 1] = "userDataInteger";
              userDataValue[userDataValue["userDataRect"] = 2] = "userDataRect";
              userDataValue[userDataValue["userDataPoint"] = 3] = "userDataPoint";
              userDataValue[userDataValue["userDataString"] = 4] = "userDataString";
          })(userDataValue = ssfb.userDataValue || (ssfb.userDataValue = {}));
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectParticleInfiniteEmitEnabled = /** @class */ (function () {
              function EffectParticleInfiniteEmitEnabled() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns EffectParticleInfiniteEmitEnabled
               */
              EffectParticleInfiniteEmitEnabled.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              EffectParticleInfiniteEmitEnabled.prototype.flag = function () {
                  return this.bb.readInt32(this.bb_pos);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number flag
               * @returns flatbuffers.Offset
               */
              EffectParticleInfiniteEmitEnabled.createEffectParticleInfiniteEmitEnabled = function (builder, flag) {
                  builder.prep(4, 4);
                  builder.writeInt32(flag);
                  return builder.offset();
              };
              return EffectParticleInfiniteEmitEnabled;
          }());
          ssfb.EffectParticleInfiniteEmitEnabled = EffectParticleInfiniteEmitEnabled;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectParticleTurnToDirectionEnabled = /** @class */ (function () {
              function EffectParticleTurnToDirectionEnabled() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns EffectParticleTurnToDirectionEnabled
               */
              EffectParticleTurnToDirectionEnabled.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              EffectParticleTurnToDirectionEnabled.prototype.Rotation = function () {
                  return this.bb.readFloat32(this.bb_pos);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number Rotation
               * @returns flatbuffers.Offset
               */
              EffectParticleTurnToDirectionEnabled.createEffectParticleTurnToDirectionEnabled = function (builder, Rotation) {
                  builder.prep(4, 4);
                  builder.writeFloat32(Rotation);
                  return builder.offset();
              };
              return EffectParticleTurnToDirectionEnabled;
          }());
          ssfb.EffectParticleTurnToDirectionEnabled = EffectParticleTurnToDirectionEnabled;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectParticlePointGravity = /** @class */ (function () {
              function EffectParticlePointGravity() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns EffectParticlePointGravity
               */
              EffectParticlePointGravity.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              EffectParticlePointGravity.prototype.PositionX = function () {
                  return this.bb.readFloat32(this.bb_pos);
              };
              /**
               * @returns number
               */
              EffectParticlePointGravity.prototype.PositionY = function () {
                  return this.bb.readFloat32(this.bb_pos + 4);
              };
              /**
               * @returns number
               */
              EffectParticlePointGravity.prototype.Power = function () {
                  return this.bb.readFloat32(this.bb_pos + 8);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number Position_x
               * @param number Position_y
               * @param number Power
               * @returns flatbuffers.Offset
               */
              EffectParticlePointGravity.createEffectParticlePointGravity = function (builder, Position_x, Position_y, Power) {
                  builder.prep(4, 12);
                  builder.writeFloat32(Power);
                  builder.writeFloat32(Position_y);
                  builder.writeFloat32(Position_x);
                  return builder.offset();
              };
              return EffectParticlePointGravity;
          }());
          ssfb.EffectParticlePointGravity = EffectParticlePointGravity;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectParticleElementTransSize = /** @class */ (function () {
              function EffectParticleElementTransSize() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns EffectParticleElementTransSize
               */
              EffectParticleElementTransSize.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              EffectParticleElementTransSize.prototype.SizeXMinValue = function () {
                  return this.bb.readFloat32(this.bb_pos);
              };
              /**
               * @returns number
               */
              EffectParticleElementTransSize.prototype.SizeXMaxValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 4);
              };
              /**
               * @returns number
               */
              EffectParticleElementTransSize.prototype.SizeYMinValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 8);
              };
              /**
               * @returns number
               */
              EffectParticleElementTransSize.prototype.SizeYMaxValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 12);
              };
              /**
               * @returns number
               */
              EffectParticleElementTransSize.prototype.ScaleFactorMinValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 16);
              };
              /**
               * @returns number
               */
              EffectParticleElementTransSize.prototype.ScaleFactorMaxValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 20);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number SizeXMinValue
               * @param number SizeXMaxValue
               * @param number SizeYMinValue
               * @param number SizeYMaxValue
               * @param number ScaleFactorMinValue
               * @param number ScaleFactorMaxValue
               * @returns flatbuffers.Offset
               */
              EffectParticleElementTransSize.createEffectParticleElementTransSize = function (builder, SizeXMinValue, SizeXMaxValue, SizeYMinValue, SizeYMaxValue, ScaleFactorMinValue, ScaleFactorMaxValue) {
                  builder.prep(4, 24);
                  builder.writeFloat32(ScaleFactorMaxValue);
                  builder.writeFloat32(ScaleFactorMinValue);
                  builder.writeFloat32(SizeYMaxValue);
                  builder.writeFloat32(SizeYMinValue);
                  builder.writeFloat32(SizeXMaxValue);
                  builder.writeFloat32(SizeXMinValue);
                  return builder.offset();
              };
              return EffectParticleElementTransSize;
          }());
          ssfb.EffectParticleElementTransSize = EffectParticleElementTransSize;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectParticleElementSize = /** @class */ (function () {
              function EffectParticleElementSize() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns EffectParticleElementSize
               */
              EffectParticleElementSize.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              EffectParticleElementSize.prototype.SizeXMinValue = function () {
                  return this.bb.readFloat32(this.bb_pos);
              };
              /**
               * @returns number
               */
              EffectParticleElementSize.prototype.SizeXMaxValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 4);
              };
              /**
               * @returns number
               */
              EffectParticleElementSize.prototype.SizeYMinValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 8);
              };
              /**
               * @returns number
               */
              EffectParticleElementSize.prototype.SizeYMaxValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 12);
              };
              /**
               * @returns number
               */
              EffectParticleElementSize.prototype.ScaleFactorMinValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 16);
              };
              /**
               * @returns number
               */
              EffectParticleElementSize.prototype.ScaleFactorMaxValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 20);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number SizeXMinValue
               * @param number SizeXMaxValue
               * @param number SizeYMinValue
               * @param number SizeYMaxValue
               * @param number ScaleFactorMinValue
               * @param number ScaleFactorMaxValue
               * @returns flatbuffers.Offset
               */
              EffectParticleElementSize.createEffectParticleElementSize = function (builder, SizeXMinValue, SizeXMaxValue, SizeYMinValue, SizeYMaxValue, ScaleFactorMinValue, ScaleFactorMaxValue) {
                  builder.prep(4, 24);
                  builder.writeFloat32(ScaleFactorMaxValue);
                  builder.writeFloat32(ScaleFactorMinValue);
                  builder.writeFloat32(SizeYMaxValue);
                  builder.writeFloat32(SizeYMinValue);
                  builder.writeFloat32(SizeXMaxValue);
                  builder.writeFloat32(SizeXMinValue);
                  return builder.offset();
              };
              return EffectParticleElementSize;
          }());
          ssfb.EffectParticleElementSize = EffectParticleElementSize;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectParticleElementAlphaFade = /** @class */ (function () {
              function EffectParticleElementAlphaFade() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns EffectParticleElementAlphaFade
               */
              EffectParticleElementAlphaFade.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              EffectParticleElementAlphaFade.prototype.disprangeMinValue = function () {
                  return this.bb.readFloat32(this.bb_pos);
              };
              /**
               * @returns number
               */
              EffectParticleElementAlphaFade.prototype.disprangeMaxValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number disprangeMinValue
               * @param number disprangeMaxValue
               * @returns flatbuffers.Offset
               */
              EffectParticleElementAlphaFade.createEffectParticleElementAlphaFade = function (builder, disprangeMinValue, disprangeMaxValue) {
                  builder.prep(4, 8);
                  builder.writeFloat32(disprangeMaxValue);
                  builder.writeFloat32(disprangeMinValue);
                  return builder.offset();
              };
              return EffectParticleElementAlphaFade;
          }());
          ssfb.EffectParticleElementAlphaFade = EffectParticleElementAlphaFade;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectParticleElementTransColor = /** @class */ (function () {
              function EffectParticleElementTransColor() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns EffectParticleElementTransColor
               */
              EffectParticleElementTransColor.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              EffectParticleElementTransColor.prototype.ColorMinValue = function () {
                  return this.bb.readUint32(this.bb_pos);
              };
              /**
               * @returns number
               */
              EffectParticleElementTransColor.prototype.ColorMaxValue = function () {
                  return this.bb.readUint32(this.bb_pos + 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number ColorMinValue
               * @param number ColorMaxValue
               * @returns flatbuffers.Offset
               */
              EffectParticleElementTransColor.createEffectParticleElementTransColor = function (builder, ColorMinValue, ColorMaxValue) {
                  builder.prep(4, 8);
                  builder.writeInt32(ColorMaxValue);
                  builder.writeInt32(ColorMinValue);
                  return builder.offset();
              };
              return EffectParticleElementTransColor;
          }());
          ssfb.EffectParticleElementTransColor = EffectParticleElementTransColor;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectParticleElementInitColor = /** @class */ (function () {
              function EffectParticleElementInitColor() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns EffectParticleElementInitColor
               */
              EffectParticleElementInitColor.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              EffectParticleElementInitColor.prototype.ColorMinValue = function () {
                  return this.bb.readUint32(this.bb_pos);
              };
              /**
               * @returns number
               */
              EffectParticleElementInitColor.prototype.ColorMaxValue = function () {
                  return this.bb.readUint32(this.bb_pos + 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number ColorMinValue
               * @param number ColorMaxValue
               * @returns flatbuffers.Offset
               */
              EffectParticleElementInitColor.createEffectParticleElementInitColor = function (builder, ColorMinValue, ColorMaxValue) {
                  builder.prep(4, 8);
                  builder.writeInt32(ColorMaxValue);
                  builder.writeInt32(ColorMinValue);
                  return builder.offset();
              };
              return EffectParticleElementInitColor;
          }());
          ssfb.EffectParticleElementInitColor = EffectParticleElementInitColor;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectParticleElementTangentialAcceleration = /** @class */ (function () {
              function EffectParticleElementTangentialAcceleration() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns EffectParticleElementTangentialAcceleration
               */
              EffectParticleElementTangentialAcceleration.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              EffectParticleElementTangentialAcceleration.prototype.AccelerationMinValue = function () {
                  return this.bb.readFloat32(this.bb_pos);
              };
              /**
               * @returns number
               */
              EffectParticleElementTangentialAcceleration.prototype.AccelerationMaxValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number AccelerationMinValue
               * @param number AccelerationMaxValue
               * @returns flatbuffers.Offset
               */
              EffectParticleElementTangentialAcceleration.createEffectParticleElementTangentialAcceleration = function (builder, AccelerationMinValue, AccelerationMaxValue) {
                  builder.prep(4, 8);
                  builder.writeFloat32(AccelerationMaxValue);
                  builder.writeFloat32(AccelerationMinValue);
                  return builder.offset();
              };
              return EffectParticleElementTangentialAcceleration;
          }());
          ssfb.EffectParticleElementTangentialAcceleration = EffectParticleElementTangentialAcceleration;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectParticleElementTransSpeed = /** @class */ (function () {
              function EffectParticleElementTransSpeed() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns EffectParticleElementTransSpeed
               */
              EffectParticleElementTransSpeed.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              EffectParticleElementTransSpeed.prototype.SpeedMinValue = function () {
                  return this.bb.readFloat32(this.bb_pos);
              };
              /**
               * @returns number
               */
              EffectParticleElementTransSpeed.prototype.SpeedMaxValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number SpeedMinValue
               * @param number SpeedMaxValue
               * @returns flatbuffers.Offset
               */
              EffectParticleElementTransSpeed.createEffectParticleElementTransSpeed = function (builder, SpeedMinValue, SpeedMaxValue) {
                  builder.prep(4, 8);
                  builder.writeFloat32(SpeedMaxValue);
                  builder.writeFloat32(SpeedMinValue);
                  return builder.offset();
              };
              return EffectParticleElementTransSpeed;
          }());
          ssfb.EffectParticleElementTransSpeed = EffectParticleElementTransSpeed;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectParticleElementRotationTrans = /** @class */ (function () {
              function EffectParticleElementRotationTrans() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns EffectParticleElementRotationTrans
               */
              EffectParticleElementRotationTrans.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              EffectParticleElementRotationTrans.prototype.RotationFactor = function () {
                  return this.bb.readFloat32(this.bb_pos);
              };
              /**
               * @returns number
               */
              EffectParticleElementRotationTrans.prototype.EndLifeTimePer = function () {
                  return this.bb.readFloat32(this.bb_pos + 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number RotationFactor
               * @param number EndLifeTimePer
               * @returns flatbuffers.Offset
               */
              EffectParticleElementRotationTrans.createEffectParticleElementRotationTrans = function (builder, RotationFactor, EndLifeTimePer) {
                  builder.prep(4, 8);
                  builder.writeFloat32(EndLifeTimePer);
                  builder.writeFloat32(RotationFactor);
                  return builder.offset();
              };
              return EffectParticleElementRotationTrans;
          }());
          ssfb.EffectParticleElementRotationTrans = EffectParticleElementRotationTrans;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectParticleElementRotation = /** @class */ (function () {
              function EffectParticleElementRotation() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns EffectParticleElementRotation
               */
              EffectParticleElementRotation.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              EffectParticleElementRotation.prototype.RotationMinValue = function () {
                  return this.bb.readFloat32(this.bb_pos);
              };
              /**
               * @returns number
               */
              EffectParticleElementRotation.prototype.RotationMaxValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 4);
              };
              /**
               * @returns number
               */
              EffectParticleElementRotation.prototype.RotationAddMinValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 8);
              };
              /**
               * @returns number
               */
              EffectParticleElementRotation.prototype.RotationAddMaxValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 12);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number RotationMinValue
               * @param number RotationMaxValue
               * @param number RotationAddMinValue
               * @param number RotationAddMaxValue
               * @returns flatbuffers.Offset
               */
              EffectParticleElementRotation.createEffectParticleElementRotation = function (builder, RotationMinValue, RotationMaxValue, RotationAddMinValue, RotationAddMaxValue) {
                  builder.prep(4, 16);
                  builder.writeFloat32(RotationAddMaxValue);
                  builder.writeFloat32(RotationAddMinValue);
                  builder.writeFloat32(RotationMaxValue);
                  builder.writeFloat32(RotationMinValue);
                  return builder.offset();
              };
              return EffectParticleElementRotation;
          }());
          ssfb.EffectParticleElementRotation = EffectParticleElementRotation;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectParticleElementPosition = /** @class */ (function () {
              function EffectParticleElementPosition() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns EffectParticleElementPosition
               */
              EffectParticleElementPosition.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              EffectParticleElementPosition.prototype.OffsetXMinValue = function () {
                  return this.bb.readFloat32(this.bb_pos);
              };
              /**
               * @returns number
               */
              EffectParticleElementPosition.prototype.OffsetXMaxValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 4);
              };
              /**
               * @returns number
               */
              EffectParticleElementPosition.prototype.OffsetYMinValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 8);
              };
              /**
               * @returns number
               */
              EffectParticleElementPosition.prototype.OffsetYMaxValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 12);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number OffsetXMinValue
               * @param number OffsetXMaxValue
               * @param number OffsetYMinValue
               * @param number OffsetYMaxValue
               * @returns flatbuffers.Offset
               */
              EffectParticleElementPosition.createEffectParticleElementPosition = function (builder, OffsetXMinValue, OffsetXMaxValue, OffsetYMinValue, OffsetYMaxValue) {
                  builder.prep(4, 16);
                  builder.writeFloat32(OffsetYMaxValue);
                  builder.writeFloat32(OffsetYMinValue);
                  builder.writeFloat32(OffsetXMaxValue);
                  builder.writeFloat32(OffsetXMinValue);
                  return builder.offset();
              };
              return EffectParticleElementPosition;
          }());
          ssfb.EffectParticleElementPosition = EffectParticleElementPosition;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectParticleElementGravity = /** @class */ (function () {
              function EffectParticleElementGravity() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns EffectParticleElementGravity
               */
              EffectParticleElementGravity.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              EffectParticleElementGravity.prototype.GravityX = function () {
                  return this.bb.readFloat32(this.bb_pos);
              };
              /**
               * @returns number
               */
              EffectParticleElementGravity.prototype.GravityY = function () {
                  return this.bb.readFloat32(this.bb_pos + 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number Gravity_x
               * @param number Gravity_y
               * @returns flatbuffers.Offset
               */
              EffectParticleElementGravity.createEffectParticleElementGravity = function (builder, Gravity_x, Gravity_y) {
                  builder.prep(4, 8);
                  builder.writeFloat32(Gravity_y);
                  builder.writeFloat32(Gravity_x);
                  return builder.offset();
              };
              return EffectParticleElementGravity;
          }());
          ssfb.EffectParticleElementGravity = EffectParticleElementGravity;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectParticleElementDelay = /** @class */ (function () {
              function EffectParticleElementDelay() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns EffectParticleElementDelay
               */
              EffectParticleElementDelay.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              EffectParticleElementDelay.prototype.DelayTime = function () {
                  return this.bb.readInt32(this.bb_pos);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number DelayTime
               * @returns flatbuffers.Offset
               */
              EffectParticleElementDelay.createEffectParticleElementDelay = function (builder, DelayTime) {
                  builder.prep(4, 4);
                  builder.writeInt32(DelayTime);
                  return builder.offset();
              };
              return EffectParticleElementDelay;
          }());
          ssfb.EffectParticleElementDelay = EffectParticleElementDelay;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectParticleElementRndSeedChange = /** @class */ (function () {
              function EffectParticleElementRndSeedChange() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns EffectParticleElementRndSeedChange
               */
              EffectParticleElementRndSeedChange.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              EffectParticleElementRndSeedChange.prototype.Seed = function () {
                  return this.bb.readInt32(this.bb_pos);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number Seed
               * @returns flatbuffers.Offset
               */
              EffectParticleElementRndSeedChange.createEffectParticleElementRndSeedChange = function (builder, Seed) {
                  builder.prep(4, 4);
                  builder.writeInt32(Seed);
                  return builder.offset();
              };
              return EffectParticleElementRndSeedChange;
          }());
          ssfb.EffectParticleElementRndSeedChange = EffectParticleElementRndSeedChange;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectParticleElementBasic = /** @class */ (function () {
              function EffectParticleElementBasic() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns EffectParticleElementBasic
               */
              EffectParticleElementBasic.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              EffectParticleElementBasic.prototype.SsEffectFunctionType = function () {
                  return this.bb.readInt32(this.bb_pos);
              };
              /**
               * @returns number
               */
              EffectParticleElementBasic.prototype.priority = function () {
                  return this.bb.readInt32(this.bb_pos + 4);
              };
              /**
               * @returns number
               */
              EffectParticleElementBasic.prototype.maximumParticle = function () {
                  return this.bb.readInt32(this.bb_pos + 8);
              };
              /**
               * @returns number
               */
              EffectParticleElementBasic.prototype.attimeCreate = function () {
                  return this.bb.readInt32(this.bb_pos + 12);
              };
              /**
               * @returns number
               */
              EffectParticleElementBasic.prototype.interval = function () {
                  return this.bb.readInt32(this.bb_pos + 16);
              };
              /**
               * @returns number
               */
              EffectParticleElementBasic.prototype.lifetime = function () {
                  return this.bb.readInt32(this.bb_pos + 20);
              };
              /**
               * @returns number
               */
              EffectParticleElementBasic.prototype.speedMinValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 24);
              };
              /**
               * @returns number
               */
              EffectParticleElementBasic.prototype.speedMaxValue = function () {
                  return this.bb.readFloat32(this.bb_pos + 28);
              };
              /**
               * @returns number
               */
              EffectParticleElementBasic.prototype.lifespanMinValue = function () {
                  return this.bb.readInt32(this.bb_pos + 32);
              };
              /**
               * @returns number
               */
              EffectParticleElementBasic.prototype.lifespanMaxValue = function () {
                  return this.bb.readInt32(this.bb_pos + 36);
              };
              /**
               * @returns number
               */
              EffectParticleElementBasic.prototype.angle = function () {
                  return this.bb.readFloat32(this.bb_pos + 40);
              };
              /**
               * @returns number
               */
              EffectParticleElementBasic.prototype.angleVariance = function () {
                  return this.bb.readFloat32(this.bb_pos + 44);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number SsEffectFunctionType
               * @param number priority
               * @param number maximumParticle
               * @param number attimeCreate
               * @param number interval
               * @param number lifetime
               * @param number speedMinValue
               * @param number speedMaxValue
               * @param number lifespanMinValue
               * @param number lifespanMaxValue
               * @param number angle
               * @param number angleVariance
               * @returns flatbuffers.Offset
               */
              EffectParticleElementBasic.createEffectParticleElementBasic = function (builder, SsEffectFunctionType, priority, maximumParticle, attimeCreate, interval, lifetime, speedMinValue, speedMaxValue, lifespanMinValue, lifespanMaxValue, angle, angleVariance) {
                  builder.prep(4, 48);
                  builder.writeFloat32(angleVariance);
                  builder.writeFloat32(angle);
                  builder.writeInt32(lifespanMaxValue);
                  builder.writeInt32(lifespanMinValue);
                  builder.writeFloat32(speedMaxValue);
                  builder.writeFloat32(speedMinValue);
                  builder.writeInt32(lifetime);
                  builder.writeInt32(interval);
                  builder.writeInt32(attimeCreate);
                  builder.writeInt32(maximumParticle);
                  builder.writeInt32(priority);
                  builder.writeInt32(SsEffectFunctionType);
                  return builder.offset();
              };
              return EffectParticleElementBasic;
          }());
          ssfb.EffectParticleElementBasic = EffectParticleElementBasic;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectNode = /** @class */ (function () {
              function EffectNode() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns EffectNode
               */
              EffectNode.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @param flatbuffers.ByteBuffer bb
               * @param EffectNode= obj
               * @returns EffectNode
               */
              EffectNode.getRootAsEffectNode = function (bb, obj) {
                  return (obj || new EffectNode).__init(bb.readInt32(bb.position()) + bb.position(), bb);
              };
              /**
               * @returns number
               */
              EffectNode.prototype.arrayIndex = function () {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              EffectNode.prototype.parentIndex = function () {
                  var offset = this.bb.__offset(this.bb_pos, 6);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              EffectNode.prototype.type = function () {
                  var offset = this.bb.__offset(this.bb_pos, 8);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              EffectNode.prototype.cellIndex = function () {
                  var offset = this.bb.__offset(this.bb_pos, 10);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              EffectNode.prototype.blendType = function () {
                  var offset = this.bb.__offset(this.bb_pos, 12);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              EffectNode.prototype.numBehavior = function () {
                  var offset = this.bb.__offset(this.bb_pos, 14);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @param number index
               * @returns ss.ssfb.EffectNodeBehavior
               */
              EffectNode.prototype.BehaviorType = function (index) {
                  var offset = this.bb.__offset(this.bb_pos, 16);
                  return offset ? /**  */ (this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index)) : /**  */ (0);
              };
              /**
               * @returns number
               */
              EffectNode.prototype.BehaviorTypeLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 16);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @returns Uint8Array
               */
              EffectNode.prototype.BehaviorTypeArray = function () {
                  var offset = this.bb.__offset(this.bb_pos, 16);
                  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
              };
              /**
               * @param number index
               * @param flatbuffers.Table= obj
               * @returns ?flatbuffers.Table
               */
              EffectNode.prototype.Behavior = function (index, obj) {
                  var offset = this.bb.__offset(this.bb_pos, 18);
                  return offset ? this.bb.__union(obj, this.bb.__vector(this.bb_pos + offset) + index * 4) : null;
              };
              /**
               * @returns number
               */
              EffectNode.prototype.BehaviorLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 18);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @param flatbuffers.Builder builder
               */
              EffectNode.startEffectNode = function (builder) {
                  builder.startObject(8);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number arrayIndex
               */
              EffectNode.addArrayIndex = function (builder, arrayIndex) {
                  builder.addFieldInt16(0, arrayIndex, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number parentIndex
               */
              EffectNode.addParentIndex = function (builder, parentIndex) {
                  builder.addFieldInt16(1, parentIndex, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number type
               */
              EffectNode.addType = function (builder, type) {
                  builder.addFieldInt16(2, type, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number cellIndex
               */
              EffectNode.addCellIndex = function (builder, cellIndex) {
                  builder.addFieldInt16(3, cellIndex, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number blendType
               */
              EffectNode.addBlendType = function (builder, blendType) {
                  builder.addFieldInt16(4, blendType, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numBehavior
               */
              EffectNode.addNumBehavior = function (builder, numBehavior) {
                  builder.addFieldInt16(5, numBehavior, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset BehaviorTypeOffset
               */
              EffectNode.addBehaviorType = function (builder, BehaviorTypeOffset) {
                  builder.addFieldOffset(6, BehaviorTypeOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<ss.ssfb.EffectNodeBehavior> data
               * @returns flatbuffers.Offset
               */
              EffectNode.createBehaviorTypeVector = function (builder, data) {
                  builder.startVector(1, data.length, 1);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addInt8(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              EffectNode.startBehaviorTypeVector = function (builder, numElems) {
                  builder.startVector(1, numElems, 1);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset BehaviorOffset
               */
              EffectNode.addBehavior = function (builder, BehaviorOffset) {
                  builder.addFieldOffset(7, BehaviorOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<flatbuffers.Offset> data
               * @returns flatbuffers.Offset
               */
              EffectNode.createBehaviorVector = function (builder, data) {
                  builder.startVector(4, data.length, 4);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addOffset(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              EffectNode.startBehaviorVector = function (builder, numElems) {
                  builder.startVector(4, numElems, 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @returns flatbuffers.Offset
               */
              EffectNode.endEffectNode = function (builder) {
                  var offset = builder.endObject();
                  return offset;
              };
              EffectNode.createEffectNode = function (builder, arrayIndex, parentIndex, type, cellIndex, blendType, numBehavior, BehaviorTypeOffset, BehaviorOffset) {
                  EffectNode.startEffectNode(builder);
                  EffectNode.addArrayIndex(builder, arrayIndex);
                  EffectNode.addParentIndex(builder, parentIndex);
                  EffectNode.addType(builder, type);
                  EffectNode.addCellIndex(builder, cellIndex);
                  EffectNode.addBlendType(builder, blendType);
                  EffectNode.addNumBehavior(builder, numBehavior);
                  EffectNode.addBehaviorType(builder, BehaviorTypeOffset);
                  EffectNode.addBehavior(builder, BehaviorOffset);
                  return EffectNode.endEffectNode(builder);
              };
              return EffectNode;
          }());
          ssfb.EffectNode = EffectNode;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var EffectFile = /** @class */ (function () {
              function EffectFile() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns EffectFile
               */
              EffectFile.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @param flatbuffers.ByteBuffer bb
               * @param EffectFile= obj
               * @returns EffectFile
               */
              EffectFile.getRootAsEffectFile = function (bb, obj) {
                  return (obj || new EffectFile).__init(bb.readInt32(bb.position()) + bb.position(), bb);
              };
              EffectFile.prototype.name = function (optionalEncoding) {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
              };
              /**
               * @returns number
               */
              EffectFile.prototype.fps = function () {
                  var offset = this.bb.__offset(this.bb_pos, 6);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              EffectFile.prototype.isLockRandSeed = function () {
                  var offset = this.bb.__offset(this.bb_pos, 8);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              EffectFile.prototype.lockRandSeed = function () {
                  var offset = this.bb.__offset(this.bb_pos, 10);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              EffectFile.prototype.layoutScaleX = function () {
                  var offset = this.bb.__offset(this.bb_pos, 12);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              EffectFile.prototype.layoutScaleY = function () {
                  var offset = this.bb.__offset(this.bb_pos, 14);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              EffectFile.prototype.numNodeList = function () {
                  var offset = this.bb.__offset(this.bb_pos, 16);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @param number index
               * @param ss.ssfb.EffectNode= obj
               * @returns ss.ssfb.EffectNode
               */
              EffectFile.prototype.effectNode = function (index, obj) {
                  var offset = this.bb.__offset(this.bb_pos, 18);
                  return offset ? (obj || new ss.ssfb.EffectNode).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
              };
              /**
               * @returns number
               */
              EffectFile.prototype.effectNodeLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 18);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @param flatbuffers.Builder builder
               */
              EffectFile.startEffectFile = function (builder) {
                  builder.startObject(8);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset nameOffset
               */
              EffectFile.addName = function (builder, nameOffset) {
                  builder.addFieldOffset(0, nameOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number fps
               */
              EffectFile.addFps = function (builder, fps) {
                  builder.addFieldInt16(1, fps, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number isLockRandSeed
               */
              EffectFile.addIsLockRandSeed = function (builder, isLockRandSeed) {
                  builder.addFieldInt16(2, isLockRandSeed, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number lockRandSeed
               */
              EffectFile.addLockRandSeed = function (builder, lockRandSeed) {
                  builder.addFieldInt16(3, lockRandSeed, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number layoutScaleX
               */
              EffectFile.addLayoutScaleX = function (builder, layoutScaleX) {
                  builder.addFieldInt16(4, layoutScaleX, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number layoutScaleY
               */
              EffectFile.addLayoutScaleY = function (builder, layoutScaleY) {
                  builder.addFieldInt16(5, layoutScaleY, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numNodeList
               */
              EffectFile.addNumNodeList = function (builder, numNodeList) {
                  builder.addFieldInt16(6, numNodeList, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset effectNodeOffset
               */
              EffectFile.addEffectNode = function (builder, effectNodeOffset) {
                  builder.addFieldOffset(7, effectNodeOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<flatbuffers.Offset> data
               * @returns flatbuffers.Offset
               */
              EffectFile.createEffectNodeVector = function (builder, data) {
                  builder.startVector(4, data.length, 4);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addOffset(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              EffectFile.startEffectNodeVector = function (builder, numElems) {
                  builder.startVector(4, numElems, 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @returns flatbuffers.Offset
               */
              EffectFile.endEffectFile = function (builder) {
                  var offset = builder.endObject();
                  return offset;
              };
              EffectFile.createEffectFile = function (builder, nameOffset, fps, isLockRandSeed, lockRandSeed, layoutScaleX, layoutScaleY, numNodeList, effectNodeOffset) {
                  EffectFile.startEffectFile(builder);
                  EffectFile.addName(builder, nameOffset);
                  EffectFile.addFps(builder, fps);
                  EffectFile.addIsLockRandSeed(builder, isLockRandSeed);
                  EffectFile.addLockRandSeed(builder, lockRandSeed);
                  EffectFile.addLayoutScaleX(builder, layoutScaleX);
                  EffectFile.addLayoutScaleY(builder, layoutScaleY);
                  EffectFile.addNumNodeList(builder, numNodeList);
                  EffectFile.addEffectNode(builder, effectNodeOffset);
                  return EffectFile.endEffectFile(builder);
              };
              return EffectFile;
          }());
          ssfb.EffectFile = EffectFile;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var CellMap = /** @class */ (function () {
              function CellMap() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns CellMap
               */
              CellMap.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @param flatbuffers.ByteBuffer bb
               * @param CellMap= obj
               * @returns CellMap
               */
              CellMap.getRootAsCellMap = function (bb, obj) {
                  return (obj || new CellMap).__init(bb.readInt32(bb.position()) + bb.position(), bb);
              };
              CellMap.prototype.name = function (optionalEncoding) {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
              };
              CellMap.prototype.imagePath = function (optionalEncoding) {
                  var offset = this.bb.__offset(this.bb_pos, 6);
                  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
              };
              /**
               * @returns number
               */
              CellMap.prototype.index = function () {
                  var offset = this.bb.__offset(this.bb_pos, 8);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              CellMap.prototype.wrapmode = function () {
                  var offset = this.bb.__offset(this.bb_pos, 10);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              CellMap.prototype.filtermode = function () {
                  var offset = this.bb.__offset(this.bb_pos, 12);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @param flatbuffers.Builder builder
               */
              CellMap.startCellMap = function (builder) {
                  builder.startObject(5);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset nameOffset
               */
              CellMap.addName = function (builder, nameOffset) {
                  builder.addFieldOffset(0, nameOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset imagePathOffset
               */
              CellMap.addImagePath = function (builder, imagePathOffset) {
                  builder.addFieldOffset(1, imagePathOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number index
               */
              CellMap.addIndex = function (builder, index) {
                  builder.addFieldInt16(2, index, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number wrapmode
               */
              CellMap.addWrapmode = function (builder, wrapmode) {
                  builder.addFieldInt16(3, wrapmode, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number filtermode
               */
              CellMap.addFiltermode = function (builder, filtermode) {
                  builder.addFieldInt16(4, filtermode, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @returns flatbuffers.Offset
               */
              CellMap.endCellMap = function (builder) {
                  var offset = builder.endObject();
                  return offset;
              };
              CellMap.createCellMap = function (builder, nameOffset, imagePathOffset, index, wrapmode, filtermode) {
                  CellMap.startCellMap(builder);
                  CellMap.addName(builder, nameOffset);
                  CellMap.addImagePath(builder, imagePathOffset);
                  CellMap.addIndex(builder, index);
                  CellMap.addWrapmode(builder, wrapmode);
                  CellMap.addFiltermode(builder, filtermode);
                  return CellMap.endCellMap(builder);
              };
              return CellMap;
          }());
          ssfb.CellMap = CellMap;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var Cell = /** @class */ (function () {
              function Cell() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns Cell
               */
              Cell.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @param flatbuffers.ByteBuffer bb
               * @param Cell= obj
               * @returns Cell
               */
              Cell.getRootAsCell = function (bb, obj) {
                  return (obj || new Cell).__init(bb.readInt32(bb.position()) + bb.position(), bb);
              };
              Cell.prototype.name = function (optionalEncoding) {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
              };
              /**
               * @param ss.ssfb.CellMap= obj
               * @returns ss.ssfb.CellMap|null
               */
              Cell.prototype.cellMap = function (obj) {
                  var offset = this.bb.__offset(this.bb_pos, 6);
                  return offset ? (obj || new ss.ssfb.CellMap).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
              };
              /**
               * @returns number
               */
              Cell.prototype.indexInCellMap = function () {
                  var offset = this.bb.__offset(this.bb_pos, 8);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              Cell.prototype.x = function () {
                  var offset = this.bb.__offset(this.bb_pos, 10);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              Cell.prototype.y = function () {
                  var offset = this.bb.__offset(this.bb_pos, 12);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              Cell.prototype.width = function () {
                  var offset = this.bb.__offset(this.bb_pos, 14);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              Cell.prototype.height = function () {
                  var offset = this.bb.__offset(this.bb_pos, 16);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              Cell.prototype.pivotX = function () {
                  var offset = this.bb.__offset(this.bb_pos, 18);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              Cell.prototype.pivotY = function () {
                  var offset = this.bb.__offset(this.bb_pos, 20);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              Cell.prototype.u1 = function () {
                  var offset = this.bb.__offset(this.bb_pos, 22);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              Cell.prototype.v1 = function () {
                  var offset = this.bb.__offset(this.bb_pos, 24);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              Cell.prototype.u2 = function () {
                  var offset = this.bb.__offset(this.bb_pos, 26);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              Cell.prototype.v2 = function () {
                  var offset = this.bb.__offset(this.bb_pos, 28);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @param flatbuffers.Builder builder
               */
              Cell.startCell = function (builder) {
                  builder.startObject(13);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset nameOffset
               */
              Cell.addName = function (builder, nameOffset) {
                  builder.addFieldOffset(0, nameOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset cellMapOffset
               */
              Cell.addCellMap = function (builder, cellMapOffset) {
                  builder.addFieldOffset(1, cellMapOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number indexInCellMap
               */
              Cell.addIndexInCellMap = function (builder, indexInCellMap) {
                  builder.addFieldInt16(2, indexInCellMap, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number x
               */
              Cell.addX = function (builder, x) {
                  builder.addFieldInt16(3, x, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number y
               */
              Cell.addY = function (builder, y) {
                  builder.addFieldInt16(4, y, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number width
               */
              Cell.addWidth = function (builder, width) {
                  builder.addFieldInt16(5, width, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number height
               */
              Cell.addHeight = function (builder, height) {
                  builder.addFieldInt16(6, height, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number pivotX
               */
              Cell.addPivotX = function (builder, pivotX) {
                  builder.addFieldFloat32(7, pivotX, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number pivotY
               */
              Cell.addPivotY = function (builder, pivotY) {
                  builder.addFieldFloat32(8, pivotY, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number u1
               */
              Cell.addU1 = function (builder, u1) {
                  builder.addFieldFloat32(9, u1, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number v1
               */
              Cell.addV1 = function (builder, v1) {
                  builder.addFieldFloat32(10, v1, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number u2
               */
              Cell.addU2 = function (builder, u2) {
                  builder.addFieldFloat32(11, u2, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number v2
               */
              Cell.addV2 = function (builder, v2) {
                  builder.addFieldFloat32(12, v2, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @returns flatbuffers.Offset
               */
              Cell.endCell = function (builder) {
                  var offset = builder.endObject();
                  return offset;
              };
              Cell.createCell = function (builder, nameOffset, cellMapOffset, indexInCellMap, x, y, width, height, pivotX, pivotY, u1, v1, u2, v2) {
                  Cell.startCell(builder);
                  Cell.addName(builder, nameOffset);
                  Cell.addCellMap(builder, cellMapOffset);
                  Cell.addIndexInCellMap(builder, indexInCellMap);
                  Cell.addX(builder, x);
                  Cell.addY(builder, y);
                  Cell.addWidth(builder, width);
                  Cell.addHeight(builder, height);
                  Cell.addPivotX(builder, pivotX);
                  Cell.addPivotY(builder, pivotY);
                  Cell.addU1(builder, u1);
                  Cell.addV1(builder, v1);
                  Cell.addU2(builder, u2);
                  Cell.addV2(builder, v2);
                  return Cell.endCell(builder);
              };
              return Cell;
          }());
          ssfb.Cell = Cell;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var meshDataUV = /** @class */ (function () {
              function meshDataUV() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns meshDataUV
               */
              meshDataUV.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @param flatbuffers.ByteBuffer bb
               * @param meshDataUV= obj
               * @returns meshDataUV
               */
              meshDataUV.getRootAsmeshDataUV = function (bb, obj) {
                  return (obj || new meshDataUV).__init(bb.readInt32(bb.position()) + bb.position(), bb);
              };
              /**
               * @param number index
               * @returns number
               */
              meshDataUV.prototype.uv = function (index) {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
              };
              /**
               * @returns number
               */
              meshDataUV.prototype.uvLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @returns Float32Array
               */
              meshDataUV.prototype.uvArray = function () {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
              };
              /**
               * @param flatbuffers.Builder builder
               */
              meshDataUV.startmeshDataUV = function (builder) {
                  builder.startObject(1);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset uvOffset
               */
              meshDataUV.addUv = function (builder, uvOffset) {
                  builder.addFieldOffset(0, uvOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<number> data
               * @returns flatbuffers.Offset
               */
              meshDataUV.createUvVector = function (builder, data) {
                  builder.startVector(4, data.length, 4);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addFloat32(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              meshDataUV.startUvVector = function (builder, numElems) {
                  builder.startVector(4, numElems, 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @returns flatbuffers.Offset
               */
              meshDataUV.endmeshDataUV = function (builder) {
                  var offset = builder.endObject();
                  return offset;
              };
              meshDataUV.createmeshDataUV = function (builder, uvOffset) {
                  meshDataUV.startmeshDataUV(builder);
                  meshDataUV.addUv(builder, uvOffset);
                  return meshDataUV.endmeshDataUV(builder);
              };
              return meshDataUV;
          }());
          ssfb.meshDataUV = meshDataUV;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var meshDataIndices = /** @class */ (function () {
              function meshDataIndices() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns meshDataIndices
               */
              meshDataIndices.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @param flatbuffers.ByteBuffer bb
               * @param meshDataIndices= obj
               * @returns meshDataIndices
               */
              meshDataIndices.getRootAsmeshDataIndices = function (bb, obj) {
                  return (obj || new meshDataIndices).__init(bb.readInt32(bb.position()) + bb.position(), bb);
              };
              /**
               * @param number index
               * @returns number
               */
              meshDataIndices.prototype.indices = function (index) {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? this.bb.readFloat32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
              };
              /**
               * @returns number
               */
              meshDataIndices.prototype.indicesLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @returns Float32Array
               */
              meshDataIndices.prototype.indicesArray = function () {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? new Float32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
              };
              /**
               * @param flatbuffers.Builder builder
               */
              meshDataIndices.startmeshDataIndices = function (builder) {
                  builder.startObject(1);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset indicesOffset
               */
              meshDataIndices.addIndices = function (builder, indicesOffset) {
                  builder.addFieldOffset(0, indicesOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<number> data
               * @returns flatbuffers.Offset
               */
              meshDataIndices.createIndicesVector = function (builder, data) {
                  builder.startVector(4, data.length, 4);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addFloat32(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              meshDataIndices.startIndicesVector = function (builder, numElems) {
                  builder.startVector(4, numElems, 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @returns flatbuffers.Offset
               */
              meshDataIndices.endmeshDataIndices = function (builder) {
                  var offset = builder.endObject();
                  return offset;
              };
              meshDataIndices.createmeshDataIndices = function (builder, indicesOffset) {
                  meshDataIndices.startmeshDataIndices(builder);
                  meshDataIndices.addIndices(builder, indicesOffset);
                  return meshDataIndices.endmeshDataIndices(builder);
              };
              return meshDataIndices;
          }());
          ssfb.meshDataIndices = meshDataIndices;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var partState = /** @class */ (function () {
              function partState() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns partState
               */
              partState.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @param flatbuffers.ByteBuffer bb
               * @param partState= obj
               * @returns partState
               */
              partState.getRootAspartState = function (bb, obj) {
                  return (obj || new partState).__init(bb.readInt32(bb.position()) + bb.position(), bb);
              };
              /**
               * @returns number
               */
              partState.prototype.index = function () {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              partState.prototype.flag1 = function () {
                  var offset = this.bb.__offset(this.bb_pos, 6);
                  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              partState.prototype.flag2 = function () {
                  var offset = this.bb.__offset(this.bb_pos, 8);
                  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
              };
              /**
               * @param number index
               * @returns number
               */
              partState.prototype.data = function (index) {
                  var offset = this.bb.__offset(this.bb_pos, 10);
                  return offset ? this.bb.readUint32(this.bb.__vector(this.bb_pos + offset) + index * 4) : 0;
              };
              /**
               * @returns number
               */
              partState.prototype.dataLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 10);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @returns Uint32Array
               */
              partState.prototype.dataArray = function () {
                  var offset = this.bb.__offset(this.bb_pos, 10);
                  return offset ? new Uint32Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
              };
              /**
               * @param flatbuffers.Builder builder
               */
              partState.startpartState = function (builder) {
                  builder.startObject(4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number index
               */
              partState.addIndex = function (builder, index) {
                  builder.addFieldInt16(0, index, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number flag1
               */
              partState.addFlag1 = function (builder, flag1) {
                  builder.addFieldInt32(1, flag1, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number flag2
               */
              partState.addFlag2 = function (builder, flag2) {
                  builder.addFieldInt32(2, flag2, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset dataOffset
               */
              partState.addData = function (builder, dataOffset) {
                  builder.addFieldOffset(3, dataOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<number> data
               * @returns flatbuffers.Offset
               */
              partState.createDataVector = function (builder, data) {
                  builder.startVector(4, data.length, 4);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addInt32(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              partState.startDataVector = function (builder, numElems) {
                  builder.startVector(4, numElems, 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @returns flatbuffers.Offset
               */
              partState.endpartState = function (builder) {
                  var offset = builder.endObject();
                  return offset;
              };
              partState.createpartState = function (builder, index, flag1, flag2, dataOffset) {
                  partState.startpartState(builder);
                  partState.addIndex(builder, index);
                  partState.addFlag1(builder, flag1);
                  partState.addFlag2(builder, flag2);
                  partState.addData(builder, dataOffset);
                  return partState.endpartState(builder);
              };
              return partState;
          }());
          ssfb.partState = partState;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var frameDataIndex = /** @class */ (function () {
              function frameDataIndex() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns frameDataIndex
               */
              frameDataIndex.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @param flatbuffers.ByteBuffer bb
               * @param frameDataIndex= obj
               * @returns frameDataIndex
               */
              frameDataIndex.getRootAsframeDataIndex = function (bb, obj) {
                  return (obj || new frameDataIndex).__init(bb.readInt32(bb.position()) + bb.position(), bb);
              };
              /**
               * @param number index
               * @param ss.ssfb.partState= obj
               * @returns ss.ssfb.partState
               */
              frameDataIndex.prototype.states = function (index, obj) {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? (obj || new ss.ssfb.partState).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
              };
              /**
               * @returns number
               */
              frameDataIndex.prototype.statesLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @param flatbuffers.Builder builder
               */
              frameDataIndex.startframeDataIndex = function (builder) {
                  builder.startObject(1);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset statesOffset
               */
              frameDataIndex.addStates = function (builder, statesOffset) {
                  builder.addFieldOffset(0, statesOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<flatbuffers.Offset> data
               * @returns flatbuffers.Offset
               */
              frameDataIndex.createStatesVector = function (builder, data) {
                  builder.startVector(4, data.length, 4);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addOffset(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              frameDataIndex.startStatesVector = function (builder, numElems) {
                  builder.startVector(4, numElems, 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @returns flatbuffers.Offset
               */
              frameDataIndex.endframeDataIndex = function (builder) {
                  var offset = builder.endObject();
                  return offset;
              };
              frameDataIndex.createframeDataIndex = function (builder, statesOffset) {
                  frameDataIndex.startframeDataIndex(builder);
                  frameDataIndex.addStates(builder, statesOffset);
                  return frameDataIndex.endframeDataIndex(builder);
              };
              return frameDataIndex;
          }());
          ssfb.frameDataIndex = frameDataIndex;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var userDataInteger = /** @class */ (function () {
              function userDataInteger() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns userDataInteger
               */
              userDataInteger.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              userDataInteger.prototype.integer = function () {
                  return this.bb.readInt32(this.bb_pos);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number integer
               * @returns flatbuffers.Offset
               */
              userDataInteger.createuserDataInteger = function (builder, integer) {
                  builder.prep(4, 4);
                  builder.writeInt32(integer);
                  return builder.offset();
              };
              return userDataInteger;
          }());
          ssfb.userDataInteger = userDataInteger;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var userDataRect = /** @class */ (function () {
              function userDataRect() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns userDataRect
               */
              userDataRect.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              userDataRect.prototype.x = function () {
                  return this.bb.readInt32(this.bb_pos);
              };
              /**
               * @returns number
               */
              userDataRect.prototype.y = function () {
                  return this.bb.readInt32(this.bb_pos + 4);
              };
              /**
               * @returns number
               */
              userDataRect.prototype.w = function () {
                  return this.bb.readInt32(this.bb_pos + 8);
              };
              /**
               * @returns number
               */
              userDataRect.prototype.h = function () {
                  return this.bb.readInt32(this.bb_pos + 12);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number x
               * @param number y
               * @param number w
               * @param number h
               * @returns flatbuffers.Offset
               */
              userDataRect.createuserDataRect = function (builder, x, y, w, h) {
                  builder.prep(4, 16);
                  builder.writeInt32(h);
                  builder.writeInt32(w);
                  builder.writeInt32(y);
                  builder.writeInt32(x);
                  return builder.offset();
              };
              return userDataRect;
          }());
          ssfb.userDataRect = userDataRect;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var userDataPoint = /** @class */ (function () {
              function userDataPoint() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns userDataPoint
               */
              userDataPoint.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @returns number
               */
              userDataPoint.prototype.x = function () {
                  return this.bb.readInt32(this.bb_pos);
              };
              /**
               * @returns number
               */
              userDataPoint.prototype.y = function () {
                  return this.bb.readInt32(this.bb_pos + 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number x
               * @param number y
               * @returns flatbuffers.Offset
               */
              userDataPoint.createuserDataPoint = function (builder, x, y) {
                  builder.prep(4, 8);
                  builder.writeInt32(y);
                  builder.writeInt32(x);
                  return builder.offset();
              };
              return userDataPoint;
          }());
          ssfb.userDataPoint = userDataPoint;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var userDataString = /** @class */ (function () {
              function userDataString() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns userDataString
               */
              userDataString.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @param flatbuffers.ByteBuffer bb
               * @param userDataString= obj
               * @returns userDataString
               */
              userDataString.getRootAsuserDataString = function (bb, obj) {
                  return (obj || new userDataString).__init(bb.readInt32(bb.position()) + bb.position(), bb);
              };
              /**
               * @returns number
               */
              userDataString.prototype.length = function () {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
              };
              userDataString.prototype.data = function (optionalEncoding) {
                  var offset = this.bb.__offset(this.bb_pos, 6);
                  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
              };
              /**
               * @param flatbuffers.Builder builder
               */
              userDataString.startuserDataString = function (builder) {
                  builder.startObject(2);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number length
               */
              userDataString.addLength = function (builder, length) {
                  builder.addFieldInt32(0, length, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset dataOffset
               */
              userDataString.addData = function (builder, dataOffset) {
                  builder.addFieldOffset(1, dataOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @returns flatbuffers.Offset
               */
              userDataString.enduserDataString = function (builder) {
                  var offset = builder.endObject();
                  return offset;
              };
              userDataString.createuserDataString = function (builder, length, dataOffset) {
                  userDataString.startuserDataString(builder);
                  userDataString.addLength(builder, length);
                  userDataString.addData(builder, dataOffset);
                  return userDataString.enduserDataString(builder);
              };
              return userDataString;
          }());
          ssfb.userDataString = userDataString;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var userDataItem = /** @class */ (function () {
              function userDataItem() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns userDataItem
               */
              userDataItem.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @param flatbuffers.ByteBuffer bb
               * @param userDataItem= obj
               * @returns userDataItem
               */
              userDataItem.getRootAsuserDataItem = function (bb, obj) {
                  return (obj || new userDataItem).__init(bb.readInt32(bb.position()) + bb.position(), bb);
              };
              /**
               * @returns number
               */
              userDataItem.prototype.flags = function () {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              userDataItem.prototype.arrayIndex = function () {
                  var offset = this.bb.__offset(this.bb_pos, 6);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @param number index
               * @returns ss.ssfb.userDataValue
               */
              userDataItem.prototype.dataType = function (index) {
                  var offset = this.bb.__offset(this.bb_pos, 8);
                  return offset ? /**  */ (this.bb.readUint8(this.bb.__vector(this.bb_pos + offset) + index)) : /**  */ (0);
              };
              /**
               * @returns number
               */
              userDataItem.prototype.dataTypeLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 8);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @returns Uint8Array
               */
              userDataItem.prototype.dataTypeArray = function () {
                  var offset = this.bb.__offset(this.bb_pos, 8);
                  return offset ? new Uint8Array(this.bb.bytes().buffer, this.bb.bytes().byteOffset + this.bb.__vector(this.bb_pos + offset), this.bb.__vector_len(this.bb_pos + offset)) : null;
              };
              /**
               * @param number index
               * @param flatbuffers.Table= obj
               * @returns ?flatbuffers.Table
               */
              userDataItem.prototype.data = function (index, obj) {
                  var offset = this.bb.__offset(this.bb_pos, 10);
                  return offset ? this.bb.__union(obj, this.bb.__vector(this.bb_pos + offset) + index * 4) : null;
              };
              /**
               * @returns number
               */
              userDataItem.prototype.dataLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 10);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @param flatbuffers.Builder builder
               */
              userDataItem.startuserDataItem = function (builder) {
                  builder.startObject(4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number flags
               */
              userDataItem.addFlags = function (builder, flags) {
                  builder.addFieldInt16(0, flags, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number arrayIndex
               */
              userDataItem.addArrayIndex = function (builder, arrayIndex) {
                  builder.addFieldInt16(1, arrayIndex, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset dataTypeOffset
               */
              userDataItem.addDataType = function (builder, dataTypeOffset) {
                  builder.addFieldOffset(2, dataTypeOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<ss.ssfb.userDataValue> data
               * @returns flatbuffers.Offset
               */
              userDataItem.createDataTypeVector = function (builder, data) {
                  builder.startVector(1, data.length, 1);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addInt8(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              userDataItem.startDataTypeVector = function (builder, numElems) {
                  builder.startVector(1, numElems, 1);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset dataOffset
               */
              userDataItem.addData = function (builder, dataOffset) {
                  builder.addFieldOffset(3, dataOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<flatbuffers.Offset> data
               * @returns flatbuffers.Offset
               */
              userDataItem.createDataVector = function (builder, data) {
                  builder.startVector(4, data.length, 4);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addOffset(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              userDataItem.startDataVector = function (builder, numElems) {
                  builder.startVector(4, numElems, 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @returns flatbuffers.Offset
               */
              userDataItem.enduserDataItem = function (builder) {
                  var offset = builder.endObject();
                  return offset;
              };
              userDataItem.createuserDataItem = function (builder, flags, arrayIndex, dataTypeOffset, dataOffset) {
                  userDataItem.startuserDataItem(builder);
                  userDataItem.addFlags(builder, flags);
                  userDataItem.addArrayIndex(builder, arrayIndex);
                  userDataItem.addDataType(builder, dataTypeOffset);
                  userDataItem.addData(builder, dataOffset);
                  return userDataItem.enduserDataItem(builder);
              };
              return userDataItem;
          }());
          ssfb.userDataItem = userDataItem;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var userDataPerFrame = /** @class */ (function () {
              function userDataPerFrame() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns userDataPerFrame
               */
              userDataPerFrame.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @param flatbuffers.ByteBuffer bb
               * @param userDataPerFrame= obj
               * @returns userDataPerFrame
               */
              userDataPerFrame.getRootAsuserDataPerFrame = function (bb, obj) {
                  return (obj || new userDataPerFrame).__init(bb.readInt32(bb.position()) + bb.position(), bb);
              };
              /**
               * @returns number
               */
              userDataPerFrame.prototype.frameIndex = function () {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @param number index
               * @param ss.ssfb.userDataItem= obj
               * @returns ss.ssfb.userDataItem
               */
              userDataPerFrame.prototype.data = function (index, obj) {
                  var offset = this.bb.__offset(this.bb_pos, 6);
                  return offset ? (obj || new ss.ssfb.userDataItem).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
              };
              /**
               * @returns number
               */
              userDataPerFrame.prototype.dataLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 6);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @param flatbuffers.Builder builder
               */
              userDataPerFrame.startuserDataPerFrame = function (builder) {
                  builder.startObject(2);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number frameIndex
               */
              userDataPerFrame.addFrameIndex = function (builder, frameIndex) {
                  builder.addFieldInt16(0, frameIndex, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset dataOffset
               */
              userDataPerFrame.addData = function (builder, dataOffset) {
                  builder.addFieldOffset(1, dataOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<flatbuffers.Offset> data
               * @returns flatbuffers.Offset
               */
              userDataPerFrame.createDataVector = function (builder, data) {
                  builder.startVector(4, data.length, 4);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addOffset(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              userDataPerFrame.startDataVector = function (builder, numElems) {
                  builder.startVector(4, numElems, 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @returns flatbuffers.Offset
               */
              userDataPerFrame.enduserDataPerFrame = function (builder) {
                  var offset = builder.endObject();
                  return offset;
              };
              userDataPerFrame.createuserDataPerFrame = function (builder, frameIndex, dataOffset) {
                  userDataPerFrame.startuserDataPerFrame(builder);
                  userDataPerFrame.addFrameIndex(builder, frameIndex);
                  userDataPerFrame.addData(builder, dataOffset);
                  return userDataPerFrame.enduserDataPerFrame(builder);
              };
              return userDataPerFrame;
          }());
          ssfb.userDataPerFrame = userDataPerFrame;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var labelDataItem = /** @class */ (function () {
              function labelDataItem() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns labelDataItem
               */
              labelDataItem.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @param flatbuffers.ByteBuffer bb
               * @param labelDataItem= obj
               * @returns labelDataItem
               */
              labelDataItem.getRootAslabelDataItem = function (bb, obj) {
                  return (obj || new labelDataItem).__init(bb.readInt32(bb.position()) + bb.position(), bb);
              };
              labelDataItem.prototype.label = function (optionalEncoding) {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
              };
              /**
               * @returns number
               */
              labelDataItem.prototype.frameIndex = function () {
                  var offset = this.bb.__offset(this.bb_pos, 6);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @param flatbuffers.Builder builder
               */
              labelDataItem.startlabelDataItem = function (builder) {
                  builder.startObject(2);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset labelOffset
               */
              labelDataItem.addLabel = function (builder, labelOffset) {
                  builder.addFieldOffset(0, labelOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number frameIndex
               */
              labelDataItem.addFrameIndex = function (builder, frameIndex) {
                  builder.addFieldInt16(1, frameIndex, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @returns flatbuffers.Offset
               */
              labelDataItem.endlabelDataItem = function (builder) {
                  var offset = builder.endObject();
                  return offset;
              };
              labelDataItem.createlabelDataItem = function (builder, labelOffset, frameIndex) {
                  labelDataItem.startlabelDataItem(builder);
                  labelDataItem.addLabel(builder, labelOffset);
                  labelDataItem.addFrameIndex(builder, frameIndex);
                  return labelDataItem.endlabelDataItem(builder);
              };
              return labelDataItem;
          }());
          ssfb.labelDataItem = labelDataItem;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var AnimationData = /** @class */ (function () {
              function AnimationData() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns AnimationData
               */
              AnimationData.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @param flatbuffers.ByteBuffer bb
               * @param AnimationData= obj
               * @returns AnimationData
               */
              AnimationData.getRootAsAnimationData = function (bb, obj) {
                  return (obj || new AnimationData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
              };
              AnimationData.prototype.name = function (optionalEncoding) {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
              };
              /**
               * @param number index
               * @param ss.ssfb.AnimationInitialData= obj
               * @returns ss.ssfb.AnimationInitialData
               */
              AnimationData.prototype.defaultData = function (index, obj) {
                  var offset = this.bb.__offset(this.bb_pos, 6);
                  return offset ? (obj || new ss.ssfb.AnimationInitialData).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
              };
              /**
               * @returns number
               */
              AnimationData.prototype.defaultDataLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 6);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @param number index
               * @param ss.ssfb.frameDataIndex= obj
               * @returns ss.ssfb.frameDataIndex
               */
              AnimationData.prototype.frameData = function (index, obj) {
                  var offset = this.bb.__offset(this.bb_pos, 8);
                  return offset ? (obj || new ss.ssfb.frameDataIndex).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
              };
              /**
               * @returns number
               */
              AnimationData.prototype.frameDataLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 8);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @param number index
               * @param ss.ssfb.userDataPerFrame= obj
               * @returns ss.ssfb.userDataPerFrame
               */
              AnimationData.prototype.userData = function (index, obj) {
                  var offset = this.bb.__offset(this.bb_pos, 10);
                  return offset ? (obj || new ss.ssfb.userDataPerFrame).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
              };
              /**
               * @returns number
               */
              AnimationData.prototype.userDataLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 10);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @param number index
               * @param ss.ssfb.labelDataItem= obj
               * @returns ss.ssfb.labelDataItem
               */
              AnimationData.prototype.labelData = function (index, obj) {
                  var offset = this.bb.__offset(this.bb_pos, 12);
                  return offset ? (obj || new ss.ssfb.labelDataItem).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
              };
              /**
               * @returns number
               */
              AnimationData.prototype.labelDataLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 12);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @param number index
               * @param ss.ssfb.meshDataUV= obj
               * @returns ss.ssfb.meshDataUV
               */
              AnimationData.prototype.meshsDataUV = function (index, obj) {
                  var offset = this.bb.__offset(this.bb_pos, 14);
                  return offset ? (obj || new ss.ssfb.meshDataUV).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
              };
              /**
               * @returns number
               */
              AnimationData.prototype.meshsDataUVLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 14);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @param number index
               * @param ss.ssfb.meshDataIndices= obj
               * @returns ss.ssfb.meshDataIndices
               */
              AnimationData.prototype.meshsDataIndices = function (index, obj) {
                  var offset = this.bb.__offset(this.bb_pos, 16);
                  return offset ? (obj || new ss.ssfb.meshDataIndices).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
              };
              /**
               * @returns number
               */
              AnimationData.prototype.meshsDataIndicesLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 16);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationData.prototype.startFrames = function () {
                  var offset = this.bb.__offset(this.bb_pos, 18);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationData.prototype.endFrames = function () {
                  var offset = this.bb.__offset(this.bb_pos, 20);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationData.prototype.totalFrames = function () {
                  var offset = this.bb.__offset(this.bb_pos, 22);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationData.prototype.fps = function () {
                  var offset = this.bb.__offset(this.bb_pos, 24);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationData.prototype.labelNum = function () {
                  var offset = this.bb.__offset(this.bb_pos, 26);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationData.prototype.canvasSizeW = function () {
                  var offset = this.bb.__offset(this.bb_pos, 28);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationData.prototype.canvasSizeH = function () {
                  var offset = this.bb.__offset(this.bb_pos, 30);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationData.prototype.canvasPvotX = function () {
                  var offset = this.bb.__offset(this.bb_pos, 32);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationData.prototype.canvasPvotY = function () {
                  var offset = this.bb.__offset(this.bb_pos, 34);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @param flatbuffers.Builder builder
               */
              AnimationData.startAnimationData = function (builder) {
                  builder.startObject(16);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset nameOffset
               */
              AnimationData.addName = function (builder, nameOffset) {
                  builder.addFieldOffset(0, nameOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset defaultDataOffset
               */
              AnimationData.addDefaultData = function (builder, defaultDataOffset) {
                  builder.addFieldOffset(1, defaultDataOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<flatbuffers.Offset> data
               * @returns flatbuffers.Offset
               */
              AnimationData.createDefaultDataVector = function (builder, data) {
                  builder.startVector(4, data.length, 4);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addOffset(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              AnimationData.startDefaultDataVector = function (builder, numElems) {
                  builder.startVector(4, numElems, 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset frameDataOffset
               */
              AnimationData.addFrameData = function (builder, frameDataOffset) {
                  builder.addFieldOffset(2, frameDataOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<flatbuffers.Offset> data
               * @returns flatbuffers.Offset
               */
              AnimationData.createFrameDataVector = function (builder, data) {
                  builder.startVector(4, data.length, 4);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addOffset(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              AnimationData.startFrameDataVector = function (builder, numElems) {
                  builder.startVector(4, numElems, 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset userDataOffset
               */
              AnimationData.addUserData = function (builder, userDataOffset) {
                  builder.addFieldOffset(3, userDataOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<flatbuffers.Offset> data
               * @returns flatbuffers.Offset
               */
              AnimationData.createUserDataVector = function (builder, data) {
                  builder.startVector(4, data.length, 4);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addOffset(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              AnimationData.startUserDataVector = function (builder, numElems) {
                  builder.startVector(4, numElems, 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset labelDataOffset
               */
              AnimationData.addLabelData = function (builder, labelDataOffset) {
                  builder.addFieldOffset(4, labelDataOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<flatbuffers.Offset> data
               * @returns flatbuffers.Offset
               */
              AnimationData.createLabelDataVector = function (builder, data) {
                  builder.startVector(4, data.length, 4);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addOffset(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              AnimationData.startLabelDataVector = function (builder, numElems) {
                  builder.startVector(4, numElems, 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset meshsDataUVOffset
               */
              AnimationData.addMeshsDataUV = function (builder, meshsDataUVOffset) {
                  builder.addFieldOffset(5, meshsDataUVOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<flatbuffers.Offset> data
               * @returns flatbuffers.Offset
               */
              AnimationData.createMeshsDataUVVector = function (builder, data) {
                  builder.startVector(4, data.length, 4);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addOffset(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              AnimationData.startMeshsDataUVVector = function (builder, numElems) {
                  builder.startVector(4, numElems, 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset meshsDataIndicesOffset
               */
              AnimationData.addMeshsDataIndices = function (builder, meshsDataIndicesOffset) {
                  builder.addFieldOffset(6, meshsDataIndicesOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<flatbuffers.Offset> data
               * @returns flatbuffers.Offset
               */
              AnimationData.createMeshsDataIndicesVector = function (builder, data) {
                  builder.startVector(4, data.length, 4);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addOffset(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              AnimationData.startMeshsDataIndicesVector = function (builder, numElems) {
                  builder.startVector(4, numElems, 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number startFrames
               */
              AnimationData.addStartFrames = function (builder, startFrames) {
                  builder.addFieldInt16(7, startFrames, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number endFrames
               */
              AnimationData.addEndFrames = function (builder, endFrames) {
                  builder.addFieldInt16(8, endFrames, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number totalFrames
               */
              AnimationData.addTotalFrames = function (builder, totalFrames) {
                  builder.addFieldInt16(9, totalFrames, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number fps
               */
              AnimationData.addFps = function (builder, fps) {
                  builder.addFieldInt16(10, fps, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number labelNum
               */
              AnimationData.addLabelNum = function (builder, labelNum) {
                  builder.addFieldInt16(11, labelNum, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number canvasSizeW
               */
              AnimationData.addCanvasSizeW = function (builder, canvasSizeW) {
                  builder.addFieldInt16(12, canvasSizeW, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number canvasSizeH
               */
              AnimationData.addCanvasSizeH = function (builder, canvasSizeH) {
                  builder.addFieldInt16(13, canvasSizeH, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number canvasPvotX
               */
              AnimationData.addCanvasPvotX = function (builder, canvasPvotX) {
                  builder.addFieldFloat32(14, canvasPvotX, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number canvasPvotY
               */
              AnimationData.addCanvasPvotY = function (builder, canvasPvotY) {
                  builder.addFieldFloat32(15, canvasPvotY, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @returns flatbuffers.Offset
               */
              AnimationData.endAnimationData = function (builder) {
                  var offset = builder.endObject();
                  return offset;
              };
              AnimationData.createAnimationData = function (builder, nameOffset, defaultDataOffset, frameDataOffset, userDataOffset, labelDataOffset, meshsDataUVOffset, meshsDataIndicesOffset, startFrames, endFrames, totalFrames, fps, labelNum, canvasSizeW, canvasSizeH, canvasPvotX, canvasPvotY) {
                  AnimationData.startAnimationData(builder);
                  AnimationData.addName(builder, nameOffset);
                  AnimationData.addDefaultData(builder, defaultDataOffset);
                  AnimationData.addFrameData(builder, frameDataOffset);
                  AnimationData.addUserData(builder, userDataOffset);
                  AnimationData.addLabelData(builder, labelDataOffset);
                  AnimationData.addMeshsDataUV(builder, meshsDataUVOffset);
                  AnimationData.addMeshsDataIndices(builder, meshsDataIndicesOffset);
                  AnimationData.addStartFrames(builder, startFrames);
                  AnimationData.addEndFrames(builder, endFrames);
                  AnimationData.addTotalFrames(builder, totalFrames);
                  AnimationData.addFps(builder, fps);
                  AnimationData.addLabelNum(builder, labelNum);
                  AnimationData.addCanvasSizeW(builder, canvasSizeW);
                  AnimationData.addCanvasSizeH(builder, canvasSizeH);
                  AnimationData.addCanvasPvotX(builder, canvasPvotX);
                  AnimationData.addCanvasPvotY(builder, canvasPvotY);
                  return AnimationData.endAnimationData(builder);
              };
              return AnimationData;
          }());
          ssfb.AnimationData = AnimationData;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var AnimationInitialData = /** @class */ (function () {
              function AnimationInitialData() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns AnimationInitialData
               */
              AnimationInitialData.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @param flatbuffers.ByteBuffer bb
               * @param AnimationInitialData= obj
               * @returns AnimationInitialData
               */
              AnimationInitialData.getRootAsAnimationInitialData = function (bb, obj) {
                  return (obj || new AnimationInitialData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.index = function () {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.lowflag = function () {
                  var offset = this.bb.__offset(this.bb_pos, 6);
                  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.highflag = function () {
                  var offset = this.bb.__offset(this.bb_pos, 8);
                  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.priority = function () {
                  var offset = this.bb.__offset(this.bb_pos, 10);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.cellIndex = function () {
                  var offset = this.bb.__offset(this.bb_pos, 12);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.opacity = function () {
                  var offset = this.bb.__offset(this.bb_pos, 14);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.localopacity = function () {
                  var offset = this.bb.__offset(this.bb_pos, 16);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.masklimen = function () {
                  var offset = this.bb.__offset(this.bb_pos, 18);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.positionX = function () {
                  var offset = this.bb.__offset(this.bb_pos, 20);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.positionY = function () {
                  var offset = this.bb.__offset(this.bb_pos, 22);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.positionZ = function () {
                  var offset = this.bb.__offset(this.bb_pos, 24);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.pivotX = function () {
                  var offset = this.bb.__offset(this.bb_pos, 26);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.pivotY = function () {
                  var offset = this.bb.__offset(this.bb_pos, 28);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.rotationX = function () {
                  var offset = this.bb.__offset(this.bb_pos, 30);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.rotationY = function () {
                  var offset = this.bb.__offset(this.bb_pos, 32);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.rotationZ = function () {
                  var offset = this.bb.__offset(this.bb_pos, 34);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.scaleX = function () {
                  var offset = this.bb.__offset(this.bb_pos, 36);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.scaleY = function () {
                  var offset = this.bb.__offset(this.bb_pos, 38);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.localscaleX = function () {
                  var offset = this.bb.__offset(this.bb_pos, 40);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.localscaleY = function () {
                  var offset = this.bb.__offset(this.bb_pos, 42);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.sizeX = function () {
                  var offset = this.bb.__offset(this.bb_pos, 44);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.sizeY = function () {
                  var offset = this.bb.__offset(this.bb_pos, 46);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.uvMoveX = function () {
                  var offset = this.bb.__offset(this.bb_pos, 48);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.uvMoveY = function () {
                  var offset = this.bb.__offset(this.bb_pos, 50);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.uvRotation = function () {
                  var offset = this.bb.__offset(this.bb_pos, 52);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.uvScaleX = function () {
                  var offset = this.bb.__offset(this.bb_pos, 54);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.uvScaleY = function () {
                  var offset = this.bb.__offset(this.bb_pos, 56);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.boundingRadius = function () {
                  var offset = this.bb.__offset(this.bb_pos, 58);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.instanceValueCurKeyframe = function () {
                  var offset = this.bb.__offset(this.bb_pos, 60);
                  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.instanceValueStartFrame = function () {
                  var offset = this.bb.__offset(this.bb_pos, 62);
                  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.instanceValueEndFrame = function () {
                  var offset = this.bb.__offset(this.bb_pos, 64);
                  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.instanceValueLoopNum = function () {
                  var offset = this.bb.__offset(this.bb_pos, 66);
                  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.instanceValueSpeed = function () {
                  var offset = this.bb.__offset(this.bb_pos, 68);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.instanceValueLoopflag = function () {
                  var offset = this.bb.__offset(this.bb_pos, 70);
                  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.effectValueCurKeyframe = function () {
                  var offset = this.bb.__offset(this.bb_pos, 72);
                  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.effectValueStartTime = function () {
                  var offset = this.bb.__offset(this.bb_pos, 74);
                  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.effectValueSpeed = function () {
                  var offset = this.bb.__offset(this.bb_pos, 76);
                  return offset ? this.bb.readFloat32(this.bb_pos + offset) : 0.0;
              };
              /**
               * @returns number
               */
              AnimationInitialData.prototype.effectValueLoopflag = function () {
                  var offset = this.bb.__offset(this.bb_pos, 78);
                  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
              };
              /**
               * @param flatbuffers.Builder builder
               */
              AnimationInitialData.startAnimationInitialData = function (builder) {
                  builder.startObject(38);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number index
               */
              AnimationInitialData.addIndex = function (builder, index) {
                  builder.addFieldInt16(0, index, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number lowflag
               */
              AnimationInitialData.addLowflag = function (builder, lowflag) {
                  builder.addFieldInt32(1, lowflag, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number highflag
               */
              AnimationInitialData.addHighflag = function (builder, highflag) {
                  builder.addFieldInt32(2, highflag, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number priority
               */
              AnimationInitialData.addPriority = function (builder, priority) {
                  builder.addFieldInt16(3, priority, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number cellIndex
               */
              AnimationInitialData.addCellIndex = function (builder, cellIndex) {
                  builder.addFieldInt16(4, cellIndex, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number opacity
               */
              AnimationInitialData.addOpacity = function (builder, opacity) {
                  builder.addFieldInt16(5, opacity, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number localopacity
               */
              AnimationInitialData.addLocalopacity = function (builder, localopacity) {
                  builder.addFieldInt16(6, localopacity, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number masklimen
               */
              AnimationInitialData.addMasklimen = function (builder, masklimen) {
                  builder.addFieldInt16(7, masklimen, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number positionX
               */
              AnimationInitialData.addPositionX = function (builder, positionX) {
                  builder.addFieldFloat32(8, positionX, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number positionY
               */
              AnimationInitialData.addPositionY = function (builder, positionY) {
                  builder.addFieldFloat32(9, positionY, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number positionZ
               */
              AnimationInitialData.addPositionZ = function (builder, positionZ) {
                  builder.addFieldFloat32(10, positionZ, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number pivotX
               */
              AnimationInitialData.addPivotX = function (builder, pivotX) {
                  builder.addFieldFloat32(11, pivotX, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number pivotY
               */
              AnimationInitialData.addPivotY = function (builder, pivotY) {
                  builder.addFieldFloat32(12, pivotY, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number rotationX
               */
              AnimationInitialData.addRotationX = function (builder, rotationX) {
                  builder.addFieldFloat32(13, rotationX, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number rotationY
               */
              AnimationInitialData.addRotationY = function (builder, rotationY) {
                  builder.addFieldFloat32(14, rotationY, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number rotationZ
               */
              AnimationInitialData.addRotationZ = function (builder, rotationZ) {
                  builder.addFieldFloat32(15, rotationZ, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number scaleX
               */
              AnimationInitialData.addScaleX = function (builder, scaleX) {
                  builder.addFieldFloat32(16, scaleX, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number scaleY
               */
              AnimationInitialData.addScaleY = function (builder, scaleY) {
                  builder.addFieldFloat32(17, scaleY, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number localscaleX
               */
              AnimationInitialData.addLocalscaleX = function (builder, localscaleX) {
                  builder.addFieldFloat32(18, localscaleX, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number localscaleY
               */
              AnimationInitialData.addLocalscaleY = function (builder, localscaleY) {
                  builder.addFieldFloat32(19, localscaleY, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number sizeX
               */
              AnimationInitialData.addSizeX = function (builder, sizeX) {
                  builder.addFieldFloat32(20, sizeX, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number sizeY
               */
              AnimationInitialData.addSizeY = function (builder, sizeY) {
                  builder.addFieldFloat32(21, sizeY, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number uvMoveX
               */
              AnimationInitialData.addUvMoveX = function (builder, uvMoveX) {
                  builder.addFieldFloat32(22, uvMoveX, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number uvMoveY
               */
              AnimationInitialData.addUvMoveY = function (builder, uvMoveY) {
                  builder.addFieldFloat32(23, uvMoveY, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number uvRotation
               */
              AnimationInitialData.addUvRotation = function (builder, uvRotation) {
                  builder.addFieldFloat32(24, uvRotation, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number uvScaleX
               */
              AnimationInitialData.addUvScaleX = function (builder, uvScaleX) {
                  builder.addFieldFloat32(25, uvScaleX, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number uvScaleY
               */
              AnimationInitialData.addUvScaleY = function (builder, uvScaleY) {
                  builder.addFieldFloat32(26, uvScaleY, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number boundingRadius
               */
              AnimationInitialData.addBoundingRadius = function (builder, boundingRadius) {
                  builder.addFieldFloat32(27, boundingRadius, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number instanceValueCurKeyframe
               */
              AnimationInitialData.addInstanceValueCurKeyframe = function (builder, instanceValueCurKeyframe) {
                  builder.addFieldInt32(28, instanceValueCurKeyframe, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number instanceValueStartFrame
               */
              AnimationInitialData.addInstanceValueStartFrame = function (builder, instanceValueStartFrame) {
                  builder.addFieldInt32(29, instanceValueStartFrame, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number instanceValueEndFrame
               */
              AnimationInitialData.addInstanceValueEndFrame = function (builder, instanceValueEndFrame) {
                  builder.addFieldInt32(30, instanceValueEndFrame, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number instanceValueLoopNum
               */
              AnimationInitialData.addInstanceValueLoopNum = function (builder, instanceValueLoopNum) {
                  builder.addFieldInt32(31, instanceValueLoopNum, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number instanceValueSpeed
               */
              AnimationInitialData.addInstanceValueSpeed = function (builder, instanceValueSpeed) {
                  builder.addFieldFloat32(32, instanceValueSpeed, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number instanceValueLoopflag
               */
              AnimationInitialData.addInstanceValueLoopflag = function (builder, instanceValueLoopflag) {
                  builder.addFieldInt32(33, instanceValueLoopflag, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number effectValueCurKeyframe
               */
              AnimationInitialData.addEffectValueCurKeyframe = function (builder, effectValueCurKeyframe) {
                  builder.addFieldInt32(34, effectValueCurKeyframe, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number effectValueStartTime
               */
              AnimationInitialData.addEffectValueStartTime = function (builder, effectValueStartTime) {
                  builder.addFieldInt32(35, effectValueStartTime, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number effectValueSpeed
               */
              AnimationInitialData.addEffectValueSpeed = function (builder, effectValueSpeed) {
                  builder.addFieldFloat32(36, effectValueSpeed, 0.0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number effectValueLoopflag
               */
              AnimationInitialData.addEffectValueLoopflag = function (builder, effectValueLoopflag) {
                  builder.addFieldInt32(37, effectValueLoopflag, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @returns flatbuffers.Offset
               */
              AnimationInitialData.endAnimationInitialData = function (builder) {
                  var offset = builder.endObject();
                  return offset;
              };
              AnimationInitialData.createAnimationInitialData = function (builder, index, lowflag, highflag, priority, cellIndex, opacity, localopacity, masklimen, positionX, positionY, positionZ, pivotX, pivotY, rotationX, rotationY, rotationZ, scaleX, scaleY, localscaleX, localscaleY, sizeX, sizeY, uvMoveX, uvMoveY, uvRotation, uvScaleX, uvScaleY, boundingRadius, instanceValueCurKeyframe, instanceValueStartFrame, instanceValueEndFrame, instanceValueLoopNum, instanceValueSpeed, instanceValueLoopflag, effectValueCurKeyframe, effectValueStartTime, effectValueSpeed, effectValueLoopflag) {
                  AnimationInitialData.startAnimationInitialData(builder);
                  AnimationInitialData.addIndex(builder, index);
                  AnimationInitialData.addLowflag(builder, lowflag);
                  AnimationInitialData.addHighflag(builder, highflag);
                  AnimationInitialData.addPriority(builder, priority);
                  AnimationInitialData.addCellIndex(builder, cellIndex);
                  AnimationInitialData.addOpacity(builder, opacity);
                  AnimationInitialData.addLocalopacity(builder, localopacity);
                  AnimationInitialData.addMasklimen(builder, masklimen);
                  AnimationInitialData.addPositionX(builder, positionX);
                  AnimationInitialData.addPositionY(builder, positionY);
                  AnimationInitialData.addPositionZ(builder, positionZ);
                  AnimationInitialData.addPivotX(builder, pivotX);
                  AnimationInitialData.addPivotY(builder, pivotY);
                  AnimationInitialData.addRotationX(builder, rotationX);
                  AnimationInitialData.addRotationY(builder, rotationY);
                  AnimationInitialData.addRotationZ(builder, rotationZ);
                  AnimationInitialData.addScaleX(builder, scaleX);
                  AnimationInitialData.addScaleY(builder, scaleY);
                  AnimationInitialData.addLocalscaleX(builder, localscaleX);
                  AnimationInitialData.addLocalscaleY(builder, localscaleY);
                  AnimationInitialData.addSizeX(builder, sizeX);
                  AnimationInitialData.addSizeY(builder, sizeY);
                  AnimationInitialData.addUvMoveX(builder, uvMoveX);
                  AnimationInitialData.addUvMoveY(builder, uvMoveY);
                  AnimationInitialData.addUvRotation(builder, uvRotation);
                  AnimationInitialData.addUvScaleX(builder, uvScaleX);
                  AnimationInitialData.addUvScaleY(builder, uvScaleY);
                  AnimationInitialData.addBoundingRadius(builder, boundingRadius);
                  AnimationInitialData.addInstanceValueCurKeyframe(builder, instanceValueCurKeyframe);
                  AnimationInitialData.addInstanceValueStartFrame(builder, instanceValueStartFrame);
                  AnimationInitialData.addInstanceValueEndFrame(builder, instanceValueEndFrame);
                  AnimationInitialData.addInstanceValueLoopNum(builder, instanceValueLoopNum);
                  AnimationInitialData.addInstanceValueSpeed(builder, instanceValueSpeed);
                  AnimationInitialData.addInstanceValueLoopflag(builder, instanceValueLoopflag);
                  AnimationInitialData.addEffectValueCurKeyframe(builder, effectValueCurKeyframe);
                  AnimationInitialData.addEffectValueStartTime(builder, effectValueStartTime);
                  AnimationInitialData.addEffectValueSpeed(builder, effectValueSpeed);
                  AnimationInitialData.addEffectValueLoopflag(builder, effectValueLoopflag);
                  return AnimationInitialData.endAnimationInitialData(builder);
              };
              return AnimationInitialData;
          }());
          ssfb.AnimationInitialData = AnimationInitialData;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var PartData = /** @class */ (function () {
              function PartData() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns PartData
               */
              PartData.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @param flatbuffers.ByteBuffer bb
               * @param PartData= obj
               * @returns PartData
               */
              PartData.getRootAsPartData = function (bb, obj) {
                  return (obj || new PartData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
              };
              PartData.prototype.name = function (optionalEncoding) {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
              };
              /**
               * @returns number
               */
              PartData.prototype.index = function () {
                  var offset = this.bb.__offset(this.bb_pos, 6);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              PartData.prototype.parentIndex = function () {
                  var offset = this.bb.__offset(this.bb_pos, 8);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns ss.ssfb.SsPartType
               */
              PartData.prototype.type = function () {
                  var offset = this.bb.__offset(this.bb_pos, 10);
                  return offset ? /**  */ (this.bb.readInt8(this.bb_pos + offset)) : ss.ssfb.SsPartType.Nulltype;
              };
              /**
               * @returns number
               */
              PartData.prototype.boundsType = function () {
                  var offset = this.bb.__offset(this.bb_pos, 12);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              PartData.prototype.alphaBlendType = function () {
                  var offset = this.bb.__offset(this.bb_pos, 14);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              PartData.prototype.refname = function (optionalEncoding) {
                  var offset = this.bb.__offset(this.bb_pos, 16);
                  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
              };
              PartData.prototype.effectfilename = function (optionalEncoding) {
                  var offset = this.bb.__offset(this.bb_pos, 18);
                  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
              };
              PartData.prototype.colorLabel = function (optionalEncoding) {
                  var offset = this.bb.__offset(this.bb_pos, 20);
                  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
              };
              /**
               * @returns number
               */
              PartData.prototype.maskInfluence = function () {
                  var offset = this.bb.__offset(this.bb_pos, 22);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @param flatbuffers.Builder builder
               */
              PartData.startPartData = function (builder) {
                  builder.startObject(10);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset nameOffset
               */
              PartData.addName = function (builder, nameOffset) {
                  builder.addFieldOffset(0, nameOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number index
               */
              PartData.addIndex = function (builder, index) {
                  builder.addFieldInt16(1, index, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number parentIndex
               */
              PartData.addParentIndex = function (builder, parentIndex) {
                  builder.addFieldInt16(2, parentIndex, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param ss.ssfb.SsPartType type
               */
              PartData.addType = function (builder, type) {
                  builder.addFieldInt8(3, type, ss.ssfb.SsPartType.Nulltype);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number boundsType
               */
              PartData.addBoundsType = function (builder, boundsType) {
                  builder.addFieldInt16(4, boundsType, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number alphaBlendType
               */
              PartData.addAlphaBlendType = function (builder, alphaBlendType) {
                  builder.addFieldInt16(5, alphaBlendType, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset refnameOffset
               */
              PartData.addRefname = function (builder, refnameOffset) {
                  builder.addFieldOffset(6, refnameOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset effectfilenameOffset
               */
              PartData.addEffectfilename = function (builder, effectfilenameOffset) {
                  builder.addFieldOffset(7, effectfilenameOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset colorLabelOffset
               */
              PartData.addColorLabel = function (builder, colorLabelOffset) {
                  builder.addFieldOffset(8, colorLabelOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number maskInfluence
               */
              PartData.addMaskInfluence = function (builder, maskInfluence) {
                  builder.addFieldInt16(9, maskInfluence, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @returns flatbuffers.Offset
               */
              PartData.endPartData = function (builder) {
                  var offset = builder.endObject();
                  return offset;
              };
              PartData.createPartData = function (builder, nameOffset, index, parentIndex, type, boundsType, alphaBlendType, refnameOffset, effectfilenameOffset, colorLabelOffset, maskInfluence) {
                  PartData.startPartData(builder);
                  PartData.addName(builder, nameOffset);
                  PartData.addIndex(builder, index);
                  PartData.addParentIndex(builder, parentIndex);
                  PartData.addType(builder, type);
                  PartData.addBoundsType(builder, boundsType);
                  PartData.addAlphaBlendType(builder, alphaBlendType);
                  PartData.addRefname(builder, refnameOffset);
                  PartData.addEffectfilename(builder, effectfilenameOffset);
                  PartData.addColorLabel(builder, colorLabelOffset);
                  PartData.addMaskInfluence(builder, maskInfluence);
                  return PartData.endPartData(builder);
              };
              return PartData;
          }());
          ssfb.PartData = PartData;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var AnimePackData = /** @class */ (function () {
              function AnimePackData() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns AnimePackData
               */
              AnimePackData.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @param flatbuffers.ByteBuffer bb
               * @param AnimePackData= obj
               * @returns AnimePackData
               */
              AnimePackData.getRootAsAnimePackData = function (bb, obj) {
                  return (obj || new AnimePackData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
              };
              AnimePackData.prototype.name = function (optionalEncoding) {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
              };
              /**
               * @param number index
               * @param ss.ssfb.PartData= obj
               * @returns ss.ssfb.PartData
               */
              AnimePackData.prototype.parts = function (index, obj) {
                  var offset = this.bb.__offset(this.bb_pos, 6);
                  return offset ? (obj || new ss.ssfb.PartData).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
              };
              /**
               * @returns number
               */
              AnimePackData.prototype.partsLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 6);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @param number index
               * @param ss.ssfb.AnimationData= obj
               * @returns ss.ssfb.AnimationData
               */
              AnimePackData.prototype.animations = function (index, obj) {
                  var offset = this.bb.__offset(this.bb_pos, 8);
                  return offset ? (obj || new ss.ssfb.AnimationData).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
              };
              /**
               * @returns number
               */
              AnimePackData.prototype.animationsLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 8);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @param flatbuffers.Builder builder
               */
              AnimePackData.startAnimePackData = function (builder) {
                  builder.startObject(3);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset nameOffset
               */
              AnimePackData.addName = function (builder, nameOffset) {
                  builder.addFieldOffset(0, nameOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset partsOffset
               */
              AnimePackData.addParts = function (builder, partsOffset) {
                  builder.addFieldOffset(1, partsOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<flatbuffers.Offset> data
               * @returns flatbuffers.Offset
               */
              AnimePackData.createPartsVector = function (builder, data) {
                  builder.startVector(4, data.length, 4);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addOffset(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              AnimePackData.startPartsVector = function (builder, numElems) {
                  builder.startVector(4, numElems, 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset animationsOffset
               */
              AnimePackData.addAnimations = function (builder, animationsOffset) {
                  builder.addFieldOffset(2, animationsOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<flatbuffers.Offset> data
               * @returns flatbuffers.Offset
               */
              AnimePackData.createAnimationsVector = function (builder, data) {
                  builder.startVector(4, data.length, 4);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addOffset(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              AnimePackData.startAnimationsVector = function (builder, numElems) {
                  builder.startVector(4, numElems, 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @returns flatbuffers.Offset
               */
              AnimePackData.endAnimePackData = function (builder) {
                  var offset = builder.endObject();
                  return offset;
              };
              AnimePackData.createAnimePackData = function (builder, nameOffset, partsOffset, animationsOffset) {
                  AnimePackData.startAnimePackData(builder);
                  AnimePackData.addName(builder, nameOffset);
                  AnimePackData.addParts(builder, partsOffset);
                  AnimePackData.addAnimations(builder, animationsOffset);
                  return AnimePackData.endAnimePackData(builder);
              };
              return AnimePackData;
          }());
          ssfb.AnimePackData = AnimePackData;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));
  /**
   * @constructor
   */
  (function (ss) {
      var ssfb;
      (function (ssfb) {
          var ProjectData = /** @class */ (function () {
              function ProjectData() {
                  this.bb = null;
                  this.bb_pos = 0;
              }
              /**
               * @param number i
               * @param flatbuffers.ByteBuffer bb
               * @returns ProjectData
               */
              ProjectData.prototype.__init = function (i, bb) {
                  this.bb_pos = i;
                  this.bb = bb;
                  return this;
              };
              /**
               * @param flatbuffers.ByteBuffer bb
               * @param ProjectData= obj
               * @returns ProjectData
               */
              ProjectData.getRootAsProjectData = function (bb, obj) {
                  return (obj || new ProjectData).__init(bb.readInt32(bb.position()) + bb.position(), bb);
              };
              /**
               * @param flatbuffers.ByteBuffer bb
               * @returns boolean
               */
              ProjectData.bufferHasIdentifier = function (bb) {
                  return bb.__has_identifier('SSFB');
              };
              /**
               * @returns number
               */
              ProjectData.prototype.dataId = function () {
                  var offset = this.bb.__offset(this.bb_pos, 4);
                  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              ProjectData.prototype.version = function () {
                  var offset = this.bb.__offset(this.bb_pos, 6);
                  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              ProjectData.prototype.flags = function () {
                  var offset = this.bb.__offset(this.bb_pos, 8);
                  return offset ? this.bb.readUint32(this.bb_pos + offset) : 0;
              };
              ProjectData.prototype.imageBaseDir = function (optionalEncoding) {
                  var offset = this.bb.__offset(this.bb_pos, 10);
                  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
              };
              /**
               * @param number index
               * @param ss.ssfb.Cell= obj
               * @returns ss.ssfb.Cell
               */
              ProjectData.prototype.cells = function (index, obj) {
                  var offset = this.bb.__offset(this.bb_pos, 12);
                  return offset ? (obj || new ss.ssfb.Cell).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
              };
              /**
               * @returns number
               */
              ProjectData.prototype.cellsLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 12);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @param number index
               * @param ss.ssfb.AnimePackData= obj
               * @returns ss.ssfb.AnimePackData
               */
              ProjectData.prototype.animePacks = function (index, obj) {
                  var offset = this.bb.__offset(this.bb_pos, 14);
                  return offset ? (obj || new ss.ssfb.AnimePackData).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
              };
              /**
               * @returns number
               */
              ProjectData.prototype.animePacksLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 14);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @param number index
               * @param ss.ssfb.EffectFile= obj
               * @returns ss.ssfb.EffectFile
               */
              ProjectData.prototype.effectFileList = function (index, obj) {
                  var offset = this.bb.__offset(this.bb_pos, 16);
                  return offset ? (obj || new ss.ssfb.EffectFile).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
              };
              /**
               * @returns number
               */
              ProjectData.prototype.effectFileListLength = function () {
                  var offset = this.bb.__offset(this.bb_pos, 16);
                  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              ProjectData.prototype.numCells = function () {
                  var offset = this.bb.__offset(this.bb_pos, 18);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              ProjectData.prototype.numAnimePacks = function () {
                  var offset = this.bb.__offset(this.bb_pos, 20);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @returns number
               */
              ProjectData.prototype.numEffectFileList = function () {
                  var offset = this.bb.__offset(this.bb_pos, 22);
                  return offset ? this.bb.readInt16(this.bb_pos + offset) : 0;
              };
              /**
               * @param flatbuffers.Builder builder
               */
              ProjectData.startProjectData = function (builder) {
                  builder.startObject(10);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number dataId
               */
              ProjectData.addDataId = function (builder, dataId) {
                  builder.addFieldInt32(0, dataId, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number version
               */
              ProjectData.addVersion = function (builder, version) {
                  builder.addFieldInt32(1, version, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number flags
               */
              ProjectData.addFlags = function (builder, flags) {
                  builder.addFieldInt32(2, flags, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset imageBaseDirOffset
               */
              ProjectData.addImageBaseDir = function (builder, imageBaseDirOffset) {
                  builder.addFieldOffset(3, imageBaseDirOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset cellsOffset
               */
              ProjectData.addCells = function (builder, cellsOffset) {
                  builder.addFieldOffset(4, cellsOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<flatbuffers.Offset> data
               * @returns flatbuffers.Offset
               */
              ProjectData.createCellsVector = function (builder, data) {
                  builder.startVector(4, data.length, 4);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addOffset(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              ProjectData.startCellsVector = function (builder, numElems) {
                  builder.startVector(4, numElems, 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset animePacksOffset
               */
              ProjectData.addAnimePacks = function (builder, animePacksOffset) {
                  builder.addFieldOffset(5, animePacksOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<flatbuffers.Offset> data
               * @returns flatbuffers.Offset
               */
              ProjectData.createAnimePacksVector = function (builder, data) {
                  builder.startVector(4, data.length, 4);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addOffset(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              ProjectData.startAnimePacksVector = function (builder, numElems) {
                  builder.startVector(4, numElems, 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset effectFileListOffset
               */
              ProjectData.addEffectFileList = function (builder, effectFileListOffset) {
                  builder.addFieldOffset(6, effectFileListOffset, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param Array.<flatbuffers.Offset> data
               * @returns flatbuffers.Offset
               */
              ProjectData.createEffectFileListVector = function (builder, data) {
                  builder.startVector(4, data.length, 4);
                  for (var i = data.length - 1; i >= 0; i--) {
                      builder.addOffset(data[i]);
                  }
                  return builder.endVector();
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numElems
               */
              ProjectData.startEffectFileListVector = function (builder, numElems) {
                  builder.startVector(4, numElems, 4);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numCells
               */
              ProjectData.addNumCells = function (builder, numCells) {
                  builder.addFieldInt16(7, numCells, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numAnimePacks
               */
              ProjectData.addNumAnimePacks = function (builder, numAnimePacks) {
                  builder.addFieldInt16(8, numAnimePacks, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @param number numEffectFileList
               */
              ProjectData.addNumEffectFileList = function (builder, numEffectFileList) {
                  builder.addFieldInt16(9, numEffectFileList, 0);
              };
              /**
               * @param flatbuffers.Builder builder
               * @returns flatbuffers.Offset
               */
              ProjectData.endProjectData = function (builder) {
                  var offset = builder.endObject();
                  return offset;
              };
              /**
               * @param flatbuffers.Builder builder
               * @param flatbuffers.Offset offset
               */
              ProjectData.finishProjectDataBuffer = function (builder, offset) {
                  builder.finish(offset, 'SSFB');
              };
              ProjectData.createProjectData = function (builder, dataId, version, flags, imageBaseDirOffset, cellsOffset, animePacksOffset, effectFileListOffset, numCells, numAnimePacks, numEffectFileList) {
                  ProjectData.startProjectData(builder);
                  ProjectData.addDataId(builder, dataId);
                  ProjectData.addVersion(builder, version);
                  ProjectData.addFlags(builder, flags);
                  ProjectData.addImageBaseDir(builder, imageBaseDirOffset);
                  ProjectData.addCells(builder, cellsOffset);
                  ProjectData.addAnimePacks(builder, animePacksOffset);
                  ProjectData.addEffectFileList(builder, effectFileListOffset);
                  ProjectData.addNumCells(builder, numCells);
                  ProjectData.addNumAnimePacks(builder, numAnimePacks);
                  ProjectData.addNumEffectFileList(builder, numEffectFileList);
                  return ProjectData.endProjectData(builder);
              };
              return ProjectData;
          }());
          ssfb.ProjectData = ProjectData;
      })(ssfb = ss.ssfb || (ss.ssfb = {}));
  })(exports.ss || (exports.ss = {}));

  Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=ssfblib.umd.js.map
